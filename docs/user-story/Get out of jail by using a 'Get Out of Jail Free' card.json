{'story_metadata': {'story_id': 'US-021', 'elaboration_date': '2025-01-15', 'development_readiness': 'Complete'}, 'story_narrative': {'title': "Get out of jail by using a 'Get Out of Jail Free' card", 'as_a_user_story': "As a player who is in jail and owns a 'Get Out of Jail Free' card, I want to be presented with the option to use it at the start of my turn, so that I can get out of jail immediately without spending money or relying on a lucky dice roll.", 'user_persona': "The human player who is currently in the 'InJail' state and possesses at least one 'Get Out of Jail Free' card.", 'business_value': "Implements a core, non-monetary rule for escaping jail, enhancing game authenticity and providing players with a key strategic option. This directly supports the project's core objective of rule fidelity.", 'functional_area': 'Core Gameplay Mechanics - Player Turn Management', 'story_theme': 'Jail and Player Status Management'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': "Player in jail uses their only 'Get Out of Jail Free' card", 'scenario_type': 'Happy_Path', 'given': "The player's status is 'InJail', it is the start of their turn, and their 'get_out_of_jail_cards' count is 1.", 'when': "The player is presented with their jail options and selects 'Use Get Out of Jail Free Card'.", 'then': "The player's 'status' is updated to 'Active', their 'get_out_of_jail_cards' count becomes 0, their 'jail_turns_remaining' is reset to 0, and they proceed to the Pre-Roll Management Phase of a normal turn.", 'validation_notes': 'Verify the PlayerState object reflects the changes. The game flow should allow the player to build/trade and then roll the dice.'}, {'criteria_id': 'AC-002', 'scenario': 'The used card is correctly returned to its original deck', 'scenario_type': 'Happy_Path', 'given': "The player uses a 'Get Out of Jail Free' card that originated from the Chance deck.", 'when': 'The action to use the card is confirmed.', 'then': "The specific 'Get Out of Jail Free' card is placed at the bottom of the Chance card deck.", 'validation_notes': "Inspect the GameState's 'deck_states' object to confirm the Chance deck now contains the card at the last position. This test should be repeated for a card from the Community Chest deck."}, {'criteria_id': 'AC-003', 'scenario': 'UI correctly reflects the action and state change', 'scenario_type': 'Happy_Path', 'given': 'The player is viewing the jail options dialog.', 'when': "They click the 'Use Get Out of Jail Free Card' button.", 'then': "The jail options dialog is closed, and the main game HUD for a normal turn is displayed, including the 'Roll Dice' button.", 'validation_notes': 'Visually confirm the UI transition is smooth and the correct controls are presented post-action.'}, {'criteria_id': 'AC-004', 'scenario': 'Player in jail with a card chooses another option', 'scenario_type': 'Alternative_Flow', 'given': "The player's status is 'InJail', they have 1 'Get Out of Jail Free' card, and it is the start of their turn.", 'when': "The player selects the 'Pay $50 Fine' option instead of using the card.", 'then': "The player's cash is reduced by $50, their status becomes 'Active', but their 'get_out_of_jail_cards' count remains 1.", 'validation_notes': 'Verify the PlayerState object shows the cash deduction and status change, but no change in the card count.'}, {'criteria_id': 'AC-005', 'scenario': 'Option to use card is not available without a card', 'scenario_type': 'Error_Condition', 'given': "The player's status is 'InJail' and their 'get_out_of_jail_cards' count is 0.", 'when': 'Their turn begins and the jail options are presented.', 'then': "The UI option to 'Use Get Out of Jail Free Card' is not displayed or is disabled.", 'validation_notes': 'Check the UI to ensure the button/option is not interactable or visible.'}], 'user_interface_requirements': {'ui_elements': ["A button within the 'Jail Options' modal/panel, labeled 'Use Get Out of Jail Free Card'."], 'user_interactions': ["At the start of a jailed player's turn, the game must present a choice.", "The 'Use Card' button must be conditionally enabled only if the player's 'get_out_of_jail_cards' count > 0.", "Clicking the button triggers the game logic and closes the 'Jail Options' UI."], 'display_requirements': ["The player's HUD should update to reflect their new 'Active' status and removal of the card from their inventory (if inventory is displayed)."], 'accessibility_needs': ['The button must be keyboard-navigable and selectable.', "A screen reader should announce the button's function and state (enabled/disabled)."]}, 'business_rules': [{'rule_id': 'BR-Jail-01', 'rule_description': "A 'Get Out of Jail Free' card can only be used at the beginning of the owning player's turn while they are in jail.", 'enforcement_point': 'Game logic checks player status at the start of their turn (Pre-Turn Phase).', 'violation_handling': 'The option to use the card is not presented at any other time.'}, {'rule_id': 'BR-Deck-01', 'rule_description': "A used 'Get Out of Jail Free' card must be returned to the bottom of its original deck (Chance or Community Chest).", 'enforcement_point': 'After the player confirms using the card.', 'violation_handling': "System logic must ensure the card is not lost and is correctly placed in the appropriate deck's data structure."}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-018', 'dependency_reason': "The game must have a mechanism for players to be sent to jail and have their status set to 'InJail'."}, {'story_id': 'US-024', 'dependency_reason': "The game must allow players to acquire a 'Get Out of Jail Free' card from the Chance deck."}, {'story_id': 'US-025', 'dependency_reason': "The game must allow players to acquire a 'Get Out of Jail Free' card from the Community Chest deck."}, {'story_id': 'US-020', 'dependency_reason': 'The UI framework for presenting jail options (Pay Fine, Roll, Use Card) should be established.'}], 'technical_dependencies': ['PlayerState Management service (to update player status and inventory).', 'GameState Management service (to access and modify card deck states).', 'Game Flow state machine (to handle the Pre-Turn Phase for jailed players).'], 'data_dependencies': ["The PlayerState object must contain 'status', 'get_out_of_jail_cards', and 'jail_turns_remaining' fields as per SRS 3.2.", 'The GameState object must track the card order for both Chance and Community Chest decks as per SRS 4.4.'], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ['The state transition and UI update after using the card must feel instantaneous to the user (<100ms).'], 'security': [], 'usability': ['The option to use the card must be clearly presented alongside other jail options.', 'It should be obvious to the player that using the card will consume it.'], 'accessibility': ['The feature must be compliant with WCAG 2.1 AA standards for UI controls.'], 'compatibility': []}, 'implementation_considerations': {'complexity_assessment': 'Low', 'complexity_factors': ['Requires coordination between the UI, PlayerState, and GameState.', "The 'Get Out of Jail Free' card needs to retain information about its deck of origin (Chance or Community Chest) to be returned correctly."], 'technical_risks': ['Risk of incorrect state management, such as a player getting out of jail but the card not being removed from their inventory.', 'Risk of returning the card to the wrong deck if its origin is not tracked properly.'], 'integration_points': ['Integrates with the turn management logic (Game Flow).', 'Integrates with the UI system for displaying modal choices.', 'Integrates with the data models for PlayerState and GameState (specifically the card decks).']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E'], 'test_scenarios': ['Verify a player with a card can use it to get out of jail.', "Verify the card is removed from the player's inventory.", 'Verify the card is returned to the bottom of the correct deck.', 'Verify a player without a card is not given the option.', 'Verify that choosing another jail option does not consume the card.'], 'test_data_needs': ["A predefined game state file where the human player is in jail and has one 'Get Out of Jail Free' card from the Chance deck.", 'A similar state file where the card is from the Community Chest deck.'], 'testing_tools': ['NUnit for unit tests.', 'A custom test harness for loading specific game states for integration tests.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by at least one other developer', 'Unit tests covering the state changes in PlayerState and DeckState are implemented and achieve >70% coverage for new code', 'Integration testing for the full action (UI click -> state update -> turn progression) completed successfully', 'User interface for the jail options dialog is implemented and approved', 'The feature is verified as functional in a staging build', 'No regressions are introduced to the jailing or turn management systems'], 'planning_information': {'story_points': '2', 'priority': 'High', 'sprint_considerations': ['This is a fundamental game rule and should be prioritized as soon as its prerequisite stories are complete.', 'Dependent on the implementation of the card decks and the basic jailing mechanism.'], 'release_impact': ['Essential for the initial (Version 1.0) release to meet the core objective of rule authenticity.']}}