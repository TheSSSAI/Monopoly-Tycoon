{'story_metadata': {'story_id': 'US-056', 'elaboration_date': '2025-01-17', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Adjust master, music, and sound effect volumes independently', 'as_a_user_story': "As a player, I want to independently adjust the master, music, and sound effect volume levels so that I can customize the game's audio to my personal preference for a more enjoyable experience.", 'user_persona': 'Any player of Monopoly Tycoon who wishes to customize their audio experience.', 'business_value': 'Improves user satisfaction and retention by providing essential personalization options. Enhances accessibility for players sensitive to certain sounds and allows players to balance game audio with external audio (e.g., their own music).', 'functional_area': 'Game Settings', 'story_theme': 'User Experience and Customization'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Player adjusts the music volume', 'scenario_type': 'Happy_Path', 'given': 'the player is in the settings menu and background music is playing', 'when': "the player moves the 'Music' volume slider", 'then': "the volume of the background music changes in real-time to match the slider's value, and the new setting is immediately persisted.", 'validation_notes': "Verify that the music volume changes audibly and smoothly as the slider is moved. Check that the setting is saved to the user's configuration file."}, {'criteria_id': 'AC-002', 'scenario': 'Player adjusts the sound effects volume', 'scenario_type': 'Happy_Path', 'given': 'the player is in the settings menu', 'when': "the player moves the 'Sound Effects' volume slider", 'then': 'a sample sound effect (e.g., a button click or dice sound) is played at the new volume level, and the new setting is immediately persisted.', 'validation_notes': 'Verify that a sample sound plays upon changing the slider value and that its volume corresponds to the new setting. Test in-game actions (like dice rolls) to confirm their volume is also affected.'}, {'criteria_id': 'AC-003', 'scenario': 'Player adjusts the master volume', 'scenario_type': 'Happy_Path', 'given': 'the player is in the settings menu with both music and sound effects audible', 'when': "the player moves the 'Master Volume' slider", 'then': "the overall volume of both music and sound effects changes proportionally to the slider's value, and the new setting is immediately persisted.", 'validation_notes': 'Verify that the Master Volume acts as a global multiplier for all other audio channels. For example, setting Master to 50% should halve the perceived volume of both music and SFX.'}, {'criteria_id': 'AC-004', 'scenario': 'Player mutes an audio channel', 'scenario_type': 'Edge_Case', 'given': 'the player is in the settings menu with music and sound effects audible', 'when': "the player moves the 'Music' slider to its minimum value (0%)", 'then': 'the background music is completely silenced, while sound effects remain audible at their set volume.', 'validation_notes': 'Test setting each slider (Master, Music, SFX) to 0 and confirm it mutes only the corresponding audio channel(s).'}, {'criteria_id': 'AC-005', 'scenario': 'Volume settings persist across game sessions', 'scenario_type': 'Happy_Path', 'given': 'the player has set the Music volume to 30% and Sound Effects volume to 80%', 'when': 'the player closes the game completely and then relaunches it', 'then': "the game's audio levels for music and sound effects are at 30% and 80% respectively, and the sliders in the settings menu reflect these saved values.", 'validation_notes': "Check the user's configuration file in '%APPDATA%/MonopolyTycoon/' to confirm values are saved. Relaunch the application and navigate to settings to verify the UI and audio levels match the saved state."}, {'criteria_id': 'AC-006', 'scenario': 'Master volume overrides individual channel volumes', 'scenario_type': 'Edge_Case', 'given': "the player has set the 'Music' and 'Sound Effects' sliders to 100%", 'when': "the player sets the 'Master Volume' slider to 0%", 'then': 'all game audio is completely silenced.', 'validation_notes': 'Confirm that even with individual channels at max, a muted master volume results in no sound output from the game.'}], 'user_interface_requirements': {'ui_elements': ["A 'Master Volume' slider control (0-100%)", "A 'Music' slider control (0-100%)", "A 'Sound Effects' slider control (0-100%)", 'Clear text labels for each slider', "A numerical display (e.g., '75%') next to each slider that updates in real-time"], 'user_interactions': ['Users can click and drag the slider handle to change the value.', 'Users can click anywhere on the slider track to jump the handle to that position.', 'Changes to slider values provide immediate auditory feedback.'], 'display_requirements': ['The sliders must be located within the main settings menu, accessible from both the main menu and the in-game pause menu.'], 'accessibility_needs': ['Sliders should have sufficient contrast and size.', 'The UI should be navigable using a keyboard or controller, allowing users to select and adjust sliders without a mouse.']}, 'business_rules': [{'rule_id': 'BR-001', 'rule_description': "Audio settings are user-specific and must be saved locally on the user's machine.", 'enforcement_point': 'When any volume slider value is changed.', 'violation_handling': 'If settings cannot be saved, the game should proceed with the temporary setting for the current session but may revert to default on next launch. A log entry should be created at the ERROR level.'}, {'rule_id': 'BR-002', 'rule_description': 'The Master volume acts as a multiplier for all other audio channels. The final volume for a channel is (Master Volume %) * (Channel Volume %).', 'enforcement_point': "At the audio engine's mixer level.", 'violation_handling': 'N/A - Core system logic.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-054', 'dependency_reason': 'This story requires the existence of an in-game settings menu to host the volume controls.'}], 'technical_dependencies': ["A centralized audio management system (e.g., Unity's AudioMixer) capable of routing sounds to distinct channels (Master, Music, SFX).", 'A data persistence system for saving and loading user settings to/from the local file system as specified in the SRS (e.g., a JSON file in %APPDATA%).'], 'data_dependencies': ['At least one background music track and one sample sound effect must be available in the project assets for testing.'], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ['Adjusting volume sliders must not cause any noticeable frame rate drops or performance degradation.'], 'security': ['The settings file should be validated/sanitized on load to prevent potential corruption or malicious data from crashing the game.'], 'usability': ['The effect of changing a volume slider must be immediate and obvious to the user.'], 'accessibility': ['Controls must be keyboard/controller accessible.'], 'compatibility': ['The feature must function correctly on all supported Windows versions (Windows 10 and 11).']}, 'implementation_considerations': {'complexity_assessment': 'Low', 'complexity_factors': ['Requires correct setup of an AudioMixer in Unity with exposed parameters for each volume channel.', "All game audio sources must be correctly routed to either the 'Music' or 'Sound Effects' mixer group.", 'Logic is needed to convert the linear slider value (0 to 1) to the logarithmic decibel scale used by audio mixers (e.g., `Mathf.Log10(value) * 20`).'], 'technical_risks': ['Risk of some game sounds being incorrectly routed, causing them to be unaffected by the correct volume slider. A thorough audit of all audio sources is required.'], 'integration_points': ['Integrates with the UI Settings Panel.', 'Integrates with the core Audio Management System.', 'Integrates with the User Settings Persistence Service.']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E'], 'test_scenarios': ['Verify each slider controls only its intended audio channel.', 'Verify settings are saved on change and persist after restarting the application.', 'Verify setting Master volume to zero mutes all sound.', 'Verify setting an individual channel to zero mutes only that channel.', 'Test audio behavior while transitioning between game states (e.g., from main menu to gameplay) to ensure settings are consistently applied.'], 'test_data_needs': ['A settings file with pre-defined values to test the loading mechanism.', 'A clean user profile with no settings file to test default value generation.'], 'testing_tools': ['NUnit for unit tests of the settings save/load logic and value conversion formulas.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by team', 'Unit tests for settings persistence and value conversion logic are implemented and passing with sufficient coverage', 'Integration testing confirms UI sliders correctly manipulate the audio mixer', 'User interface reviewed and approved for clarity and usability', 'All existing game audio sources have been audited and correctly routed to the Music or SFX channel', 'Feature has been manually tested and verified on a clean build', 'Story deployed and verified in staging environment'], 'planning_information': {'story_points': '3', 'priority': 'High', 'sprint_considerations': ['This story should be prioritized early in development as it affects all other features that produce audio.', 'Requires the settings menu UI (US-054) to be completed first.'], 'release_impact': 'This is a standard, expected feature for any modern game. Its inclusion is critical for a polished 1.0 release.'}}