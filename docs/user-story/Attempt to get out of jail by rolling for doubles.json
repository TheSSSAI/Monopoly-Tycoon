{'story_metadata': {'story_id': 'US-022', 'elaboration_date': '2025-01-17', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Attempt to get out of jail by rolling for doubles', 'as_a_user_story': "As a player in jail, I want to choose the option to roll the dice on my turn, so that I can attempt to get out of jail for free by rolling doubles, preserving my cash and 'Get Out of Jail Free' cards.", 'user_persona': "The human player whose turn it is and whose status is 'InJail'.", 'business_value': 'Implements a core, chance-based rule of Monopoly, enhancing game authenticity and providing players with a key strategic choice that impacts their resources.', 'functional_area': 'Core Gameplay Mechanics - Player Turn', 'story_theme': 'Jail and Incarceration Mechanics'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Player in jail successfully rolls doubles to get out', 'scenario_type': 'Happy_Path', 'given': "I am in the Jail space with a status of 'InJail', it is the start of my turn, and I have 1, 2, or 3 'jail_turns_remaining'", 'when': "I select the 'Roll for Doubles' option from the jail action menu", 'and': "my 'jail_turns_remaining' counter is reset", 'then': "my player status is updated from 'InJail' to 'Active'", 'validation_notes': 'Verify player state changes, token moves correctly, and the turn passes to the next player after the move is complete.'}, {'criteria_id': 'AC-002', 'scenario': 'Player in jail fails to roll doubles on their first or second attempt', 'scenario_type': 'Alternative_Flow', 'given': "I am in the Jail space with a status of 'InJail', it is the start of my turn, and I have 3 or 2 'jail_turns_remaining'", 'when': "I select the 'Roll for Doubles' option", 'and': 'my turn immediately ends and play proceeds to the next player', 'then': "my 'jail_turns_remaining' is decremented by 1", 'validation_notes': "Check the PlayerState object to confirm 'jail_turns_remaining' has decreased. Verify the game flow moves to the next player."}, {'criteria_id': 'AC-003', 'scenario': 'Jail action menu is presented correctly', 'scenario_type': 'Happy_Path', 'given': 'it is the start of my turn', 'and': "the dialog must contain a clearly labeled 'Roll for Doubles' button", 'when': 'the pre-roll management phase begins', 'then': 'a modal UI dialog is presented with my available options', 'validation_notes': "Verify the UI dialog appears automatically and contains the correct options based on the player's state (e.g., also shows 'Use Card' if one is held)."}, {'criteria_id': 'AC-004', 'scenario': 'Selecting the roll option disables other jail options for the turn', 'scenario_type': 'Edge_Case', 'given': "the jail action menu is displayed with multiple options ('Roll for Doubles', 'Pay Fine')", 'when': "I click the 'Roll for Doubles' button", 'then': 'all other options in the jail action menu become disabled', 'and': 'the dice roll sequence is initiated', 'validation_notes': 'Confirm that once an action is chosen, no other jail-related actions can be taken in the same turn.'}], 'user_interface_requirements': {'ui_elements': ["A modal dialog or dedicated UI panel for 'In Jail' actions.", "A clearly labeled button: 'Roll for Doubles'.", 'A non-intrusive notification element to display the outcome of a failed roll.'], 'user_interactions': ["At the start of the turn, the 'In Jail' dialog must automatically appear, pausing the game flow.", "The player must click the 'Roll for Doubles' button to initiate the action.", 'The dialog should close or update after the action is completed.'], 'display_requirements': ['The UI should clearly indicate how many attempts to roll for doubles are remaining.', 'After the roll, the dice result must be clearly displayed.'], 'accessibility_needs': ['All buttons must be keyboard-navigable and selectable.', 'Text contrast must meet WCAG AA standards.']}, 'business_rules': [{'rule_id': 'BR-Jail-01', 'rule_description': 'A player who gets out of Jail by rolling doubles does not take another turn.', 'enforcement_point': "In the game's turn management logic, immediately after a successful 'get out of jail' roll.", 'violation_handling': "The system must not trigger the 'extra turn' flag that is normally set when doubles are rolled."}, {'rule_id': 'BR-Jail-02', 'rule_description': 'A player has a maximum of three turns (including the turn they were sent to jail) to attempt to roll doubles.', 'enforcement_point': "The 'Roll for Doubles' option should only be presented if the player's 'jail_turns_remaining' is greater than 0.", 'violation_handling': "If 'jail_turns_remaining' is 0, the player must be forced to pay the fine as per US-023."}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-032', 'dependency_reason': "Requires the Player State Object with 'status' and 'jail_turns_remaining' attributes."}, {'story_id': 'US-018', 'dependency_reason': 'Requires the functionality to send a player to jail and set their state correctly.'}, {'story_id': 'US-015', 'dependency_reason': 'Requires the core dice rolling mechanic and random number generation.'}, {'story_id': 'US-043', 'dependency_reason': 'Requires the main game loop and turn management system to handle turn progression.'}, {'story_id': 'US-016', 'dependency_reason': 'Requires the token movement system for the successful roll scenario.'}], 'technical_dependencies': ['Game State Manager', 'UI Modal System', 'Player State Controller'], 'data_dependencies': ['PlayerState.status', 'PlayerState.jail_turns_remaining'], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ["The jail action dialog must appear within 200ms of the player's turn starting.", 'Dice roll animation must maintain the target 60 FPS.'], 'security': [], 'usability': ['The options available to the player in jail must be clear, unambiguous, and easy to select.', 'The outcome of the dice roll must be communicated clearly through visual feedback.'], 'accessibility': ['The feature must be fully usable with keyboard-only controls.'], 'compatibility': ['Functionality must be consistent across all supported Windows versions.']}, 'implementation_considerations': {'complexity_assessment': 'Medium', 'complexity_factors': ["Requires a specific check in the turn manager to intercept the normal turn flow for a player with 'InJail' status.", 'Implementation of a new UI modal for presenting jail options.', "Logic must correctly handle the exception to the standard 'doubles grants an extra turn' rule.", "State management for 'jail_turns_remaining' must be robust."], 'technical_risks': ["Potential for bugs in the turn management logic if the 'no extra turn' rule is not handled as a specific exception.", "Incorrectly decrementing or resetting the 'jail_turns_remaining' counter could break the jail mechanic."], 'integration_points': ['Turn Manager / Game Loop', 'Player State Manager', 'Dice Rolling Service', 'UI Manager']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E'], 'test_scenarios': ['Test successful exit from jail on the first attempt.', 'Test failed exit from jail on the first attempt.', 'Test successful exit from jail on the second attempt.', 'Test failed exit from jail on the second attempt.', 'Verify that a successful roll out of jail does not grant an extra turn.', "Verify that the jail UI appears only when the player's status is 'InJail'."], 'test_data_needs': ['A saved game state file where the human player is in jail with 3 turns remaining.', 'A saved game state file where the human player is in jail with 2 turns remaining.'], 'testing_tools': ['NUnit for unit tests.', 'Unity Test Framework for integration tests.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by at least one other developer', 'Unit tests covering state transitions and rule logic are implemented with >80% coverage', 'Integration testing for the full jail-to-active flow is completed successfully', "The 'In Jail' UI has been reviewed and approved for usability", "The special rule for 'no extra turn on doubles' is explicitly tested and verified", "Documentation for the PlayerState 'jail_turns_remaining' attribute is updated", 'Story deployed and verified in the staging environment'], 'planning_information': {'story_points': '3', 'priority': 'High', 'sprint_considerations': ['This story should be developed in the same sprint as US-020 (Pay Fine) and US-021 (Use Card) as they share the same UI.', 'Depends heavily on a stable turn management system (US-043).'], 'release_impact': 'Critical for core gameplay. The game is not shippable without this fundamental rule.'}}