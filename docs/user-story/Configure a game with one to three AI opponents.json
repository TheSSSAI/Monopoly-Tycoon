{'story_metadata': {'story_id': 'US-009', 'elaboration_date': '2025-01-15', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Configure a game with one to three AI opponents', 'as_a_user_story': "As a player setting up a new game, I want to select the number of AI opponents from a choice of one, two, or three, so that I can customize the game's challenge, duration, and overall experience to my preference.", 'user_persona': 'Any player initiating a new game session.', 'business_value': "Provides core game customization, enhancing player control and replayability by allowing users to tailor the game's complexity and length.", 'functional_area': 'Game Setup & Configuration', 'story_theme': 'Player Onboarding and Game Customization'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Select one AI opponent', 'scenario_type': 'Happy_Path', 'given': 'I am on the game setup screen', 'when': "I select '1' as the number of AI opponents and start the game", 'then': 'a new game session is created with a total of two players: one human and one AI.', 'validation_notes': 'Verify in-game HUD shows two players. Verify game turn order cycles between the human and the single AI.'}, {'criteria_id': 'AC-002', 'scenario': 'Select two AI opponents', 'scenario_type': 'Happy_Path', 'given': 'I am on the game setup screen', 'when': "I select '2' as the number of AI opponents and start the game", 'then': 'a new game session is created with a total of three players: one human and two AIs.', 'validation_notes': 'Verify in-game HUD shows three players. Verify game turn order cycles between the human and the two AIs.'}, {'criteria_id': 'AC-003', 'scenario': 'Select three AI opponents', 'scenario_type': 'Happy_Path', 'given': 'I am on the game setup screen', 'when': "I select '3' as the number of AI opponents and start the game", 'then': 'a new game session is created with a total of four players: one human and three AIs.', 'validation_notes': 'Verify in-game HUD shows four players. Verify game turn order cycles between the human and the three AIs.'}, {'criteria_id': 'AC-004', 'scenario': 'Default selection on screen load', 'scenario_type': 'Happy_Path', 'given': 'I navigate to the game setup screen for the first time', 'when': 'the screen finishes loading', 'then': "a default value (e.g., '2' AI opponents) is pre-selected in the UI.", 'validation_notes': 'Check the state of the UI control immediately after the setup screen appears.'}, {'criteria_id': 'AC-005', 'scenario': 'UI dynamically updates for AI configuration', 'scenario_type': 'Alternative_Flow', 'given': 'I am on the game setup screen', 'when': "I change the selected number of AI opponents from '1' to '3'", 'then': 'the UI dynamically updates to display configuration sections for three distinct AI opponents.', 'validation_notes': "This is a dependency for US-010. The UI should show placeholders or actual controls for setting each AI's difficulty. The number of these sections must match the selection."}, {'criteria_id': 'AC-006', 'scenario': 'Selection is constrained to valid options', 'scenario_type': 'Error_Condition', 'given': 'I am interacting with the UI for selecting the number of opponents', 'when': 'I view the available options', 'then': "the only selectable options are '1', '2', and '3'.", 'validation_notes': 'The UI control should not present options for 0 or more than 3 opponents. This prevents invalid states by design.'}], 'user_interface_requirements': {'ui_elements': ['A clear, intuitive control for selecting the number of AI opponents (e.g., a set of radio buttons, a segmented control, or a simple dropdown).', "A label such as 'Number of Opponents' to identify the control.", 'Dynamic UI containers that appear/disappear based on the selection, intended to hold individual AI settings (like difficulty).'], 'user_interactions': ['User must be able to click or tap to select one of the three options.', 'The selected option must be visually highlighted.', 'Changing the selection must provide immediate visual feedback by updating the UI to reflect the new number of AI configuration slots.'], 'display_requirements': ['The current selection must be unambiguous to the user.'], 'accessibility_needs': ['The control must be keyboard navigable.', 'The label must be associated with the control for screen readers.', 'Sufficient color contrast for selected/unselected states.']}, 'business_rules': [{'rule_id': 'BR-001', 'rule_description': 'A game must consist of 2 to 4 players in total.', 'enforcement_point': 'Game Setup Screen Logic', 'violation_handling': 'The UI will be designed to only allow selections that result in a total player count of 2, 3, or 4 (1 human + 1, 2, or 3 AIs), making violation impossible through the standard interface.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-008', 'dependency_reason': 'The game setup screen, where this selection control will be located, must exist and be accessible from the main menu.'}], 'technical_dependencies': ['A `GameConfiguration` or `GameState` model that can store the selected number of opponents.', 'The core UI framework (Unity) for implementing the selection control.'], 'data_dependencies': [], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ['UI response to changing the selection must be instantaneous (<100ms).'], 'security': [], 'usability': ['The control for selecting opponents should be one of the first and most prominent options in the game setup flow.', 'The purpose and effect of the selection should be immediately obvious to the user.'], 'accessibility': ['Adherence to WCAG 2.1 AA standards for UI controls.'], 'compatibility': ['The UI control must render and function correctly across all supported resolutions and aspect ratios as defined in SRS 2.5.']}, 'implementation_considerations': {'complexity_assessment': 'Low', 'complexity_factors': ['Standard UI component implementation.', 'Requires state management to link the UI selection to the game configuration data model.', 'Involves simple logic to dynamically show/hide UI elements for individual AI settings.'], 'technical_risks': ['Potential for state desynchronization between the UI control and the underlying game configuration object. This can be mitigated with robust event handling or data binding.'], 'integration_points': ['Integrates with the game creation logic, which will read the number of opponents from the configuration object to instantiate the correct number of `PlayerState` objects.', "Integrates with the UI logic for `US-010` (Set AI Difficulty), as this story's selection determines how many difficulty controls are displayed."]}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E'], 'test_scenarios': ["Verify that selecting '1', '2', and '3' opponents correctly updates the game configuration model.", 'Verify that starting a game with each of the three options results in the correct number of AI players in the actual game session.', 'Verify that the UI correctly displays the corresponding number of AI configuration slots for each selection.', 'Manually test changing the selection back and forth to ensure UI stability.'], 'test_data_needs': ['No specific test data required beyond the default game setup state.'], 'testing_tools': ['NUnit for unit tests.', 'Unity Test Framework for integration tests.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by at least one other developer', 'Unit tests for the configuration model logic are implemented and passing with >80% coverage', 'Integration testing confirms that the selection correctly influences the number of players at game start', 'User interface is implemented as per UI requirements and has been reviewed for usability', 'The feature is verified as functional on a clean build', 'Story is deployed and verified in the staging environment'], 'planning_information': {'story_points': '1', 'priority': 'High', 'sprint_considerations': ['This is a foundational setup story and a blocker for `US-010` (Set AI Difficulty). It should be prioritized early in the development cycle.', 'The implementation should be forward-thinking to accommodate the UI elements for `US-010`.'], 'release_impact': 'Critical for the initial (V1.0) release. The game cannot be configured or played without this functionality.'}}