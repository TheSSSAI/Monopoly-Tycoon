{'story_metadata': {'story_id': 'US-017', 'elaboration_date': '2025-01-15', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Receive an extra turn after rolling doubles', 'as_a_user_story': 'As a player (human or AI), I want to be granted an immediate, additional turn after I roll doubles, so that the game correctly follows the official Monopoly rules and provides an authentic gameplay experience.', 'user_persona': 'Any active player in the game (human or AI).', 'business_value': "Ensures the game adheres to a fundamental rule of Monopoly, directly supporting the core project objective of 'Authenticity' (SRS 1.2, 4.1) and meeting player expectations for a faithful digital adaptation.", 'functional_area': 'Core Gameplay Mechanics', 'story_theme': 'Game Flow and Turn Management'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Player rolls doubles for the first time in a turn sequence', 'scenario_type': 'Happy_Path', 'given': "It is a player's turn, they are not in jail, and their consecutive doubles count is 0", 'when': 'The player rolls the dice and the result is doubles (e.g., two 4s)', 'then': "The player's token moves the total number of spaces, the action for the destination space is completed, the game state confirms it is still the same player's turn, and their consecutive doubles count is incremented to 1.", 'validation_notes': "Verify the 'Roll Dice' button becomes active again for the human player. For AI, verify its turn logic re-engages. Check the `PlayerState.consecutive_doubles_count` value."}, {'criteria_id': 'AC-002', 'scenario': 'Player rolls a second consecutive double', 'scenario_type': 'Happy_Path', 'given': 'A player has just completed a turn by rolling doubles and their consecutive doubles count is 1', 'when': 'The player rolls the dice again on their extra turn and the result is another double', 'then': 'The player moves and completes the action, the game state confirms it is still their turn, and their consecutive doubles count is incremented to 2.', 'validation_notes': 'This sets up the condition for US-018 (Go to Jail on third double). Verify the counter is correctly tracked.'}, {'criteria_id': 'AC-003', 'scenario': 'Player rolls a non-double after rolling a double', 'scenario_type': 'Alternative_Flow', 'given': 'A player has just completed a turn by rolling doubles and their consecutive doubles count is 1', 'when': 'The player rolls the dice again on their extra turn and the result is not a double', 'then': 'The player moves and completes the action, their consecutive doubles count is reset to 0, and the turn passes to the next player in sequence.', 'validation_notes': 'Verify the turn indicator in the HUD correctly switches to the next player.'}, {'criteria_id': 'AC-004', 'scenario': 'Player rolls a non-double on a standard turn', 'scenario_type': 'Alternative_Flow', 'given': "It is a player's turn and their consecutive doubles count is 0", 'when': 'The player rolls the dice and the result is not a double', 'then': 'The player moves and completes the action, and the turn immediately passes to the next player in sequence.', 'validation_notes': 'This is the most common case. Ensure the game flow proceeds as expected.'}, {'criteria_id': 'AC-005', 'scenario': 'Player in jail rolls doubles to get out', 'scenario_type': 'Edge_Case', 'given': "A player is in the 'InJail' state and chooses to roll the dice", 'when': 'The player rolls doubles', 'then': "The player's state changes from 'InJail' to 'Active', they move the number of spaces indicated by the dice, complete their action, and their turn ends. They are NOT granted an extra turn.", 'validation_notes': 'This is a critical rule exception. Verify the turn passes to the next player and the consecutive doubles count remains 0.'}], 'user_interface_requirements': {'ui_elements': ['HUD Turn Indicator', 'Roll Dice button'], 'user_interactions': ["After rolling doubles and completing the subsequent board action, the 'Roll Dice' button for the human player must be re-enabled.", 'The HUD must continue to highlight the current player, indicating it is still their turn.'], 'display_requirements': ["A non-intrusive, temporary notification (e.g., 'Doubles! Roll again.') should appear to inform the human player why they are getting another turn."], 'accessibility_needs': ['The visual notification for the extra turn should be accompanied by a distinct, positive audio cue, as per SRS 9.4.']}, 'business_rules': [{'rule_id': 'BR-DOUBLES-01', 'rule_description': 'A player who rolls doubles on their turn moves and takes another turn.', 'enforcement_point': "Game Flow Controller, after the Action Phase of a player's turn.", 'violation_handling': 'Game state becomes invalid. This is a core rule that must be enforced.'}, {'rule_id': 'BR-DOUBLES-02', 'rule_description': 'The extra turn rule does not apply if the doubles were rolled to get out of Jail.', 'enforcement_point': "Game Flow Controller, when checking for doubles, must also check the player's status.", 'violation_handling': 'Incorrectly granting an extra turn would violate game rules.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-015', 'dependency_reason': 'Requires the core dice rolling mechanic to be implemented.'}, {'story_id': 'US-016', 'dependency_reason': 'Requires the token movement mechanic to be implemented.'}, {'story_id': 'US-022', 'dependency_reason': 'Requires the logic for getting out of jail, as this story implements a specific exception to that rule.'}], 'technical_dependencies': ['Game State Manager: Must be able to track the active player and turn sequence.', 'PlayerState Object (SRS 3.2): Requires a property to track the consecutive doubles count (e.g., `consecutive_doubles_count`).', 'Game Flow Controller: The central logic for managing turns will be modified.'], 'data_dependencies': [], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ['The logic to check for doubles and re-initiate a turn must execute in milliseconds and have no perceivable impact on game performance or frame rate.'], 'security': ['Relies on the fairness of the random number generator from US-015.'], 'usability': ['The game must provide clear feedback to the human player that they have earned an extra turn, preventing confusion.'], 'accessibility': ['As per UI requirements, audio cues should supplement visual ones.'], 'compatibility': ['N/A for this story.']}, 'implementation_considerations': {'complexity_assessment': 'Low', 'complexity_factors': ['Modifies the core game loop/state machine.', "Requires careful handling of the 'get out of jail' exception.", 'Needs to correctly manage a state variable (`consecutive_doubles_count`) that will be consumed by another story (US-018).'], 'technical_risks': ['Risk of creating an infinite loop if the turn-passing logic is implemented incorrectly.', 'Risk of the consecutive doubles counter not resetting properly, leading to incorrect application of the three-doubles-to-jail rule.'], 'integration_points': ['GameFlowController: To manage the turn sequence.', 'DiceRoll System: To get the dice results.', 'PlayerState Model: To read player status and update the doubles counter.', 'UIController: To provide feedback to the human player.']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E'], 'test_scenarios': ['Verify a single double roll grants an extra turn.', 'Verify two consecutive double rolls grant two extra turns.', 'Verify a non-double roll correctly passes the turn to the next player.', 'Verify a non-double roll after a double roll correctly resets the counter and passes the turn.', 'Verify rolling doubles to get out of jail does NOT grant an extra turn.'], 'test_data_needs': ['Ability to mock dice roll results to force doubles and non-doubles for automated testing.', "Predefined game state files where a player is 'InJail' to test the exception case."], 'testing_tools': ['NUnit for unit tests.', 'Unity Test Framework for integration tests.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by team', 'Unit tests implemented for the turn logic and doubles counter, achieving required coverage', "Integration testing completed for the full turn sequence, including the 'get out of jail' exception", 'User interface feedback (notification, button state) reviewed and approved', 'Performance requirements verified', 'Security requirements validated', 'Documentation for the Game Flow Controller updated to reflect the new logic', 'Story deployed and verified in staging environment'], 'planning_information': {'story_points': '2', 'priority': 'High', 'sprint_considerations': ['This is a foundational game rule and should be implemented early.', "Must be developed in conjunction with or immediately before US-018 ('Be sent to jail for rolling three consecutive doubles') due to the shared state of the consecutive doubles counter."], 'release_impact': ['Critical for the Minimum Viable Product (MVP). The game is not a functional Monopoly simulation without this rule.']}}