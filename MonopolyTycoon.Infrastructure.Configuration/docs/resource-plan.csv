task_id,task_name,primary_skill,secondary_skill,complexity_level,estimated_hours,required_experience,team_size,dependencies,critical_path,resource_notes,alternative_approach
EPIC-001,"Technical Foundation & Project Setup",Backend Development,DevOps,High,298.6,Lead,4,"",Yes,"This epic requires a Lead Developer to oversee the architecture and a dedicated DevOps resource for the installer and initial setup. Core backend and UI developers will handle services and initial scenes.","Simplify architecture by combining layers; use a basic ZIP file for distribution instead of a full installer. This would increase technical debt and reduce user experience."
US-001,"Install the game on my Windows PC",DevOps,Quality Assurance,High,24,Mid,1,EPIC-001,Yes,"Requires a dedicated resource with experience in installer technologies like Inno Setup. Final tasks involve security and code signing, needing meticulous QA.","Distribute the game as a self-contained ZIP archive. This is faster to produce but offers a less professional user experience and no clean uninstallation."
TASK-002-001,"Scaffold Inno Setup Script and Add Basic Wizard Pages",DevOps,Backend Development,Medium,4.2,Mid,1,US-001,Yes,"Requires experience with Inno Setup scripting. A backend developer with scripting skills could also handle this.","Use a simpler, GUI-based installer creator, which may offer less customization for later features like conditional data deletion."
TASK-002-002,"Implement File Installation and Uninstaller Registration",DevOps,Backend Development,Medium,3.2,Mid,1,"TASK-002-001",Yes,"Core installer functionality. Requires understanding of Windows file system and registry for uninstaller registration.","Rely on a manual copy-paste installation with a simple .bat script for uninstallation. Highly unprofessional and error-prone."
TASK-002-003,"Implement Custom Installation Directory Page",DevOps,Backend Development,Medium,4,Mid,1,"TASK-002-001",No,"Involves scripting within Inno Setup to handle UI and disk space validation. Standard feature but requires specific knowledge.","Omit the custom directory option and force installation to the default Program Files directory. This is less user-friendly, especially for users with small SSDs."
TASK-002-004,"Implement Desktop Shortcut Creation Task",DevOps,Backend Development,Low,3,Junior,1,"TASK-002-001",No,"Standard Inno Setup task configuration. A junior resource can handle this with documentation.","Do not offer a desktop shortcut option, requiring users to manually create one or find the game in the Start Menu."
TASK-002-005,"Configure UAC and Code Signing for Installer",DevOps,Backend Development,High,6.7,Senior,1,"TASK-002-001",No,"Security-sensitive task requiring experience with Windows UAC and code signing certificate integration. High impact on user trust.","Skip code signing, which will result in severe security warnings from Windows Defender, creating a poor user experience and reducing trust."
US-006,"Uninstall the game cleanly from my computer",DevOps,Quality Assurance,Medium,8.4,Mid,1,"US-001,US-007",No,"Requires scripting to handle conditional logic for user data deletion, plus thorough QA to ensure no orphaned files are left.","Provide a simple uninstaller that only removes the game directory, with manual instructions for users to find and delete their AppData folder."
TASK-003-001,"Implement Custom Uninstaller Logic with Pascal Script",DevOps,Backend Development,Medium,5.2,Mid,1,"TASK-002-002",No,"Requires knowledge of Pascal Script, which is specific to Inno Setup. A backend developer can learn it, but it's a specialized skill.","Instead of a prompt, the uninstaller could always leave user data behind, which is a simpler but less complete solution."
TASK-003-002,"Implement Conditional Deletion of User Data",DevOps,Backend Development,Medium,3.2,Mid,1,"TASK-003-001",No,"Extension of the Pascal scripting. Involves file system I/O and process checking, which are standard but need careful implementation.","Remove the check for a running game instance, which could lead to uninstallation errors if the user tries to uninstall while playing."
TASK-001-001,"Initialize Git Repository and Define Branching Strategy",DevOps,Product Management,Low,2,Mid,1,"",Yes,"Foundational project setup. Requires experience with version control best practices. A DevOps or Lead Dev role is appropriate.","Use a simpler branching model like trunk-based development, which may be less suitable for a team with varying experience levels."
TASK-001-002,"Create VS 2022 Solution and Unity Project",Backend Development,Frontend Development,Low,3,Mid,1,"TASK-001-001",Yes,"Standard environment setup. A developer with experience in both .NET and Unity is ideal, typically a Lead or Senior.","Use separate solutions for core logic and Unity, which can complicate the build process and dependency management."
TASK-001-003,"Configure Assembly Definitions for Layered Architecture",Backend Development,Frontend Development,High,6.3,Senior,1,"TASK-001-002",Yes,"Critical architectural task requiring deep knowledge of Unity's assembly system and software design principles. A Lead or Senior dev is required.","Do not use assembly definitions, putting all code in the default assembly. This severely damages maintainability, testability, and compile times."
TASK-004-001,"Integrate and Configure Serilog",Backend Development,DevOps,Medium,4,Mid,1,"TASK-001-002",Yes,"Requires experience with .NET dependency management (NuGet) and the Serilog library. A mid-level backend developer is suitable.","Use Unity's built-in `Debug.Log()` which provides no structured logging, no log levels, and no persistent file output, making debugging difficult."
TASK-004-002,"Implement Structured JSON File Sink",Backend Development,DevOps,Low,3,Mid,1,"TASK-004-001",Yes,"Standard Serilog configuration. Can be done by the same resource who integrates the library.","Log to a plain text file instead of JSON. This makes logs harder to parse and query for diagnostics."
TASK-004-003,"Implement Log File Path Strategy",Backend Development,DevOps,Low,2,Mid,1,"TASK-004-001",Yes,"Involves using .NET APIs to resolve system paths. A straightforward task for a backend developer.","Hardcode the log path to a location like 'C:\Logs', which will fail on systems without that directory or with permission issues."
TASK-004-004,"Configure Rolling File and Retention Policy",Backend Development,DevOps,Medium,4,Mid,1,"TASK-004-001",No,"Requires understanding Serilog's sink configuration options. Important for preventing logs from consuming excessive disk space.","Do not implement a retention policy, allowing log files to accumulate indefinitely, which could fill up the user's hard drive over time."
US-005,"Receive guidance on locating log files after an error",Backend Development,Frontend Development,High,18.3,Senior,2,"EPIC-001",Yes,"Requires both a senior backend developer for the robust exception handler and a mid-level UI developer for the fail-safe dialog. High impact feature.","Simply crash to desktop. This provides the worst possible user experience and makes bug reporting nearly impossible."
TASK-005-001,"Implement Global Unhandled Exception Handler",Backend Development,DevOps,High,8.3,Senior,1,"TASK-004-001",Yes,"This is a high-risk task that requires a deep understanding of .NET and Unity process models. Must be a Senior or Lead developer.","Rely only on try-catch blocks in high-level code, which will miss many unhandled exceptions and still result in crashes."
TASK-005-002,"Design and Implement Modal Error Dialog UI",Frontend Development,Design,Medium,6,Mid,1,"TASK-005-001",Yes,"Requires a UI developer to create a robust prefab that is independent of other game UI systems. Needs careful implementation to be fail-safe.","Instead of a UI dialog, write the error details to a simple text file on the desktop. Less user-friendly but simpler to implement."
TASK-005-003,"Implement Error ID Correlation",Backend Development,DevOps,Medium,4,Mid,1,"TASK-005-001,TASK-004-001",Yes,"The logic is simple (generate GUID, pass to logger and UI), but the integration is critical for the feature's purpose.","Do not use a correlation ID, which would make it very difficult to match a user's error report to a specific log entry."
US-013,"View my persistent historical gameplay statistics",Backend Development,Frontend Development,Medium,14.6,Mid,2,"US-011,US-046,US-047",No,"Requires a backend developer for the database logic and a UI developer for the display screen. The two can work in parallel once the data contract is defined.","Store statistics in a simple JSON file. This is less robust, not easily queryable for features like high scores, and more prone to corruption."
TASK-006-001,"Set Up SQLite and Data Access Layer (DAL)",Backend Development,Data Engineering,High,6.3,Mid,1,"TASK-001-002",Yes,"Foundational data persistence task. Requires experience with database design, SQLite, and repository patterns.","Use PlayerPrefs or a simple JSON file for all data persistence. This is not scalable, transactional, or suitable for relational data like statistics."
TASK-006-002,"Implement Database Backup Logic",Backend Development,Data Engineering,Medium,5.2,Mid,1,"TASK-006-001",Yes,"Involves file I/O and date comparisons. Critical for data resilience but a straightforward backend task.","Do not implement backups, risking total loss of player progress if the primary database file becomes corrupted."
TASK-006-003,"Define and Implement Data Models and DB Schema",Backend Development,Data Engineering,High,6.3,Mid,1,"TASK-006-001",Yes,"Requires careful data modeling and SQL knowledge to define a scalable and performant schema.","Use a schemaless approach or a single large table, which would be inefficient and difficult to maintain as new stats are added."
US-011,"Create a player profile with a custom name",Backend Development,Frontend Development,Medium,9.3,Mid,2,"US-008",Yes,"Requires a UI developer for the input form and validation feedback, and a backend developer for the database interaction. Critical path for player progression features.","Generate a random guest name for the player. This removes personalization and the foundation for persistent stats."
TASK-006-004,"Implement GetOrCreateProfile Database Logic",Backend Development,Data Engineering,High,6.3,Mid,1,"TASK-006-003",Yes,"Core logic for player identity. Must be atomic to prevent race conditions. Requires solid database and C# skills.","Always create a new profile, even if the name exists. This would lead to confusing duplicate profiles and fragmented statistics."
US-061,"Save game progress into one of several save slots",Backend Development,Data Engineering,High,20.6,Senior,1,US-054,Yes,"High complexity task involving serialization of a complex object graph and data integrity checks (checksum). Requires a Senior developer.","Implement a single-slot 'autosave' only. This removes player agency and the ability to maintain multiple game states or create backups before risky moves."
TASK-007-001,"Implement GameState Serialization to JSON",Backend Development,Data Engineering,High,8.3,Senior,1,"TASK-009-002",Yes,"This is the core of the save system. Requires deep knowledge of serialization and the entire GameState object graph to handle potential issues like circular references.","Use a binary formatter instead of JSON. This is often faster but makes save files unreadable, harder to debug, and much more brittle between versions."
TASK-007-002,"Implement Checksum Generation for Save Files",Backend Development,Data Engineering,Medium,4,Mid,1,"TASK-007-001",Yes,"Standard data integrity practice. Requires knowledge of hashing algorithms. A mid-level developer can implement this.","Do not use a checksum, making it impossible to detect save file corruption until a load attempt fails, potentially crashing the game."
US-062,"Load a game from a previously saved slot",Backend Development,Data Engineering,High,16.6,Senior,1,"US-061,US-063",Yes,"Complex counterpart to saving. Involves robust error handling, version checking, and potentially data migration. Requires a Senior developer.","Only allow loading from the main menu, not during a game. This is simpler but less convenient for the user."
TASK-007-003,"Implement GameState Deserialization from JSON",Backend Development,Data Engineering,High,8.3,Senior,1,"TASK-007-001",Yes,"Core of the load system. Must be robust against malformed or corrupted data to prevent crashes. Requires a Senior developer.","If deserialization fails, simply crash the application. The alternative is to handle the exception gracefully and inform the user."
US-063,"Visually indicate unusable save files on the load game screen",Frontend Development,Backend Development,Medium,10.5,Mid,2,"US-061,US-062",No,"Requires a backend dev for the validation logic and a UI dev to display the state. Improves user experience by preventing failed load attempts.","Allow the user to attempt to load a corrupted file, which will then fail with an error message. This is a more reactive and less user-friendly approach."
TASK-007-004,"Implement Save File Validation Logic",Backend Development,Data Engineering,High,6.3,Mid,1,"TASK-007-002,TASK-007-003",Yes,"Combines checksum and deserialization logic into a single validation step. Critical for the stability of the load screen.","Validate only on load attempt, not on screen display. This means the user won't know a save is bad until they click 'Load'."
TASK-008-001,"Implement Data Migration Service Stub and Interface",Backend Development,Data Engineering,Medium,6.3,Senior,1,"TASK-007-003,TASK-008-002",No,"Architectural task for future-proofing. Requires a senior developer to design a scalable migration pattern.","Do not build a migration system. When the save format changes, all old saves become incompatible, forcing players to start over."
TASK-008-002,"Implement Save File Versioning Read/Write Logic",Backend Development,Data Engineering,Medium,4,Mid,1,"TASK-007-001,TASK-007-003",Yes,"A small but critical part of the save/load system. Necessary for any migration or incompatibility checks.","Do not version save files. This makes it impossible to distinguish between save formats and handle them correctly."
TASK-009-001,"Implement PlayerState Data Model",Backend Development,Data Engineering,Medium,6,Mid,1,"TASK-001-002",Yes,"Core data structure for the entire game. Must be designed carefully to hold all necessary player data.","Use a less structured data model, like a Dictionary<string, object>. This is very flexible but not type-safe and prone to runtime errors."
TASK-009-002,"Implement GameState Data Model",Backend Development,Data Engineering,High,8,Senior,1,"TASK-009-001",Yes,"The single source of truth for the entire application state. A critical architectural component requiring a Senior or Lead developer to design.","Split the game state into multiple, disconnected objects. This would make saving, loading, and passing state to services extremely difficult and error-prone."
TASK-010-001,"Set Up NUnit Test Projects",Quality Assurance,Backend Development,Low,4.2,Mid,1,"TASK-001-002",Yes,"Foundational task for ensuring code quality. A developer or dedicated QA engineer can set this up.","Do not create unit tests, relying solely on manual testing. This dramatically increases the risk of regressions and makes refactoring dangerous."
TASK-010-002,"Establish and Enforce C# Coding Conventions",Backend Development,Product Management,Low,3,Lead,1,"TASK-001-002",Yes,"A task for the tech lead to establish team standards, improving code consistency and maintainability.","Do not enforce coding conventions, leading to an inconsistent and hard-to-read codebase, increasing maintenance costs."
US-008,"Start a new game from the main menu",Frontend Development,Design,Medium,18,Mid,1,"EPIC-001",Yes,"This is a critical path user story that enables all other gameplay. Requires a UI developer.","No main menu; launch the game directly into the setup screen. This reduces polish and limits future options like 'Load Game'."
TASK-024-001,"Implement Main Menu UI Shell",Frontend Development,Design,Medium,8,Mid,1,"TASK-001-002",Yes,"Core UI task. Requires a UI developer with experience in Unity's UI system. Design input is needed for layout.","Use basic, unstyled Unity UI components as placeholders. This is faster but fails to meet the 'polished' visual requirement."
TASK-024-002,"Implement Scene Management Service",Backend Development,Frontend Development,High,8,Senior,1,"TASK-001-002",Yes,"An architectural component for the presentation layer. A senior developer should design this to be robust and scalable.","Use Unity's basic `SceneManager.LoadScene` directly in button handlers. This tightly couples UI to scene names and makes adding features like loading screens difficult."
TASK-024-003,"Wire Up 'New Game' Button",Frontend Development,Backend Development,Low,2,Junior,1,"TASK-024-001,TASK-024-002",Yes,"Simple implementation task suitable for a junior developer.","",""
US-009,"Configure a game with one to three AI opponents",Frontend Development,Design,Medium,12,Mid,1,US-008,Yes,"Core game setup feature requiring a UI developer. This is on the critical path to starting a game.","Hardcode the number of opponents to a fixed number (e.g., always 3). This removes player choice and customization."
TASK-024-004,"Implement Game Setup UI Shell",Frontend Development,Design,Medium,8,Mid,1,"TASK-024-002",Yes,"Another core UI screen. A UI developer will build this based on design mockups.","Combine all setup options onto a single, cluttered screen instead of a multi-step or well-organized layout."
TASK-024-005,"Implement AI Opponent Count Selector",Frontend Development,Backend Development,Medium,4,Mid,1,"TASK-024-004",Yes,"Requires UI implementation and logic to dynamically adjust the layout. A mid-level UI developer is suitable.","Use a simple dropdown menu, which might be less visually appealing or intuitive than +/- buttons or a segmented control."
US-012,"Receive feedback for an invalid profile name",Frontend Development,Backend Development,Low,4.2,Junior,1,"US-011,US-008",No,"A polish feature for the setup screen. A junior UI developer can implement the real-time validation feedback.","Perform validation only when the 'Start Game' button is clicked. This is less user-friendly than real-time feedback."
TASK-024-008,"Implement Real-time Profile Name Validation in UI",Frontend Development,Backend Development,Medium,4.2,Mid,1,"TASK-024-007",No,"Requires connecting UI events to validation logic and updating UI state. Standard UI development task.","",""
TASK-024-007,"Implement Profile Name Input UI",Frontend Development,Design,Low,3,Junior,1,"TASK-024-004",Yes,"Basic UI task of adding an input field and text labels. Suitable for a junior developer.","",""
US-014,"Select my player token from a set of classic options",Frontend Development,Design,Medium,10.5,Mid,1,"US-008,US-009,US-011",Yes,"Important personalization feature. Requires a UI developer and 2D/3D assets from the design team.","Randomly assign a token to the player. This removes a classic, expected piece of personalization from the game."
TASK-024-009,"Implement Token Selector UI Component",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-024-004",Yes,"Requires creating a custom UI control (a selectable grid). A mid-level UI developer can handle this.","Use a simple text-based dropdown list of token names. This is functional but lacks the visual appeal of an icon grid."
TASK-024-011,"Implement AI Token Random Assignment Logic",Backend Development,Data Engineering,Medium,4.2,Mid,1,"TASK-024-009",Yes,"Simple algorithm but needs to be correct to ensure uniqueness. A backend or AI developer can write this logic.","Assign tokens to AI sequentially (e.g., AI 1 always gets Car, AI 2 always gets Dog). This is predictable and less interesting."
US-010,"Set a unique difficulty level for each AI opponent",Frontend Development,Backend Development,Medium,6.3,Mid,1,"US-008,US-009",Yes,"Core customization feature for replayability. Requires a UI developer to implement the controls on the setup screen.","Provide a single, global difficulty setting for all AI opponents. This reduces player control over the desired challenge."
TASK-024-006,"Implement AI Difficulty Selector UI",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-024-005",Yes,"UI implementation task. The complexity depends on the desired control (dropdown vs. custom buttons). A mid-level UI developer is suitable.","",""
US-054,"Access an in-game settings menu",Frontend Development,Backend Development,High,18.8,Mid,2,"US-049",Yes,"A standard and expected feature in any game. Requires a UI developer for the menu and a backend dev for the pause/resume logic.","Require the player to quit to the main menu to change settings. This would be a very poor user experience."
TASK-030-001,"Implement Pause Menu UI Shell",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-001-002",Yes,"Standard UI screen development. Requires a mid-level UI developer.","Use a very basic, unstyled menu with simple buttons. This would be functional but clash with the polished visual style of the game."
TASK-030-002,"Implement Game Pause and Resume Logic",Backend Development,Quality Assurance,High,8.3,Senior,1,"TASK-012-001",Yes,"High-risk task. Incorrectly pausing/resuming can corrupt game state. Requires a senior developer to ensure it's robust and suspends all game systems correctly.","Do not pause the game; just overlay the menu. This would be confusing and allow the game to continue in the background."
TASK-030-003,"Implement Pause Menu Navigation",Frontend Development,Backend Development,Low,4.2,Junior,1,"TASK-030-001",Yes,"Simple wiring of buttons to navigation and game logic services. Suitable for a junior developer.","",""
US-049,"View at-a-glance information for all players in the HUD",Frontend Development,Design,High,22.9,Mid,1,"US-009,US-011,US-014",Yes,"A critical UI component for gameplay. Requires a mid-level UI developer with a strong sense of layout and data binding.","Do not have a persistent HUD. Require the player to open a separate screen to view player cash and properties, which would be very disruptive to game flow."
TASK-025-001,"Design and Implement HUD UI Shell",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-001-002",Yes,"Requires careful layout planning to accommodate different player counts and aspect ratios.","Use a static layout that only works for 4 players, which would look broken or have empty space in 2 or 3-player games."
TASK-025-002,"Create Dynamic Player Panel UI Prefab",Frontend Development,Design,High,8.3,Mid,1,"TASK-025-001",Yes,"Creating a reusable, well-structured prefab is key for maintainability. A mid-level UI developer with good Unity prefab skills is needed.","Create separate, non-reusable panels for each player position. This would lead to duplicated code and be harder to update."
TASK-025-003,"Implement HUD Data Binding and Event Listeners",Frontend Development,Backend Development,High,8.3,Mid,1,"TASK-025-002,TASK-012-001",Yes,"This is the core logic of the HUD. Requires a developer comfortable with event-driven architecture to ensure the UI is always in sync with the game state.","Update the HUD by polling the game state every frame. This is highly inefficient and can lead to performance issues."
US-004,"Ensure UI and Game View Adapt to Different Monitor Aspect Ratios",Frontend Development,Design,High,16.5,Mid,1,"US-049,US-051",No,"A critical non-functional requirement for a PC game. Requires a UI developer with a strong understanding of Unity's Canvas and layout systems.","Design the UI for a fixed 16:9 aspect ratio only. This will result in a broken, unusable UI for players with ultrawide or other monitor types."
TASK-021-001,"Configure Unity Canvas Scaler for Responsive UI",Frontend Development,Design,Medium,4.2,Mid,1,"TASK-001-002",Yes,"A foundational UI setup task. Must be done correctly early on to avoid rework. A mid-level UI dev is suitable.","Leave the Canvas on the default 'Constant Pixel Size' setting, which would make the UI unusably small on high-resolution monitors."
TASK-021-002,"Implement Anchoring for Main Menu and Setup Screens",Frontend Development,Design,Medium,6,Mid,1,"TASK-024-001,TASK-024-004",No,"A meticulous task that needs to be applied to every UI element on these screens.","Use the default center anchor for all elements, which would cause them to bunch up in the middle of the screen on wider aspect ratios."
TASK-021-003,"Implement Anchoring for In-Game HUD",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-025-001",No,"Critical for the main gameplay experience. The HUD must remain usable on all supported aspect ratios.","",""
US-015,"Roll two six-sided dice to start my move",Backend Development,Frontend Development,High,21.7,Senior,2,"US-008,US-029",Yes,"A core mechanic requiring a backend dev for the secure RNG, and a UI/VFX artist/dev for the animation. The animation is a key part of the game's polish.","Don't show a dice roll; just display a number and move the token. This would feel sterile and detract from the board game feel."
TASK-022-001,"Implement 'Roll Dice' Button UI and State Logic",Frontend Development,Backend Development,Low,3,Junior,1,"TASK-012-001",Yes,"Simple UI task of managing a button's state based on game state. Suitable for a junior developer.","",""
TASK-022-002,"Create Secure Random Number Generation Service",Backend Development,Quality Assurance,High,6,Senior,1,"TASK-001-002",Yes,"Security requirement. Using a standard `Random` class is not sufficient. Requires a developer who understands the difference and importance of secure RNG.","Use `UnityEngine.Random` or `System.Random`, which are not cryptographically secure and could be predictable or exploitable in theory."
TASK-022-003,"Create 3D Dice Roll Animation",Frontend Development,Design,High,12.7,Mid,1,"TASK-022-002",No,"A significant task for a technical artist or UI developer with 3D/animation skills. The quality of this animation heavily impacts the game's 'feel'.","Use a simple 2D animation of dice images. This is much cheaper but provides a less polished, modern experience."
US-016,"Watch my token automatically move around the board",Frontend Development,Design,High,25.3,Mid,1,"US-014,US-015,US-055",Yes,"Another core visual feedback mechanic. Requires a developer skilled in Unity animations, pathing, and camera controls.","Instantly teleport the token to the destination space with no animation. This is functional but lacks any visual appeal or sense of progression."
TASK-022-004,"Map Board Spaces to 3D World Coordinates",Frontend Development,Design,Medium,6,Mid,1,"TASK-001-002",Yes,"A meticulous but necessary setup task. A UI developer or designer can place locators in the scene and record their coordinates.","Calculate positions procedurally. This is more complex and can be brittle if the board model changes."
TASK-022-005,"Implement Token Movement Animation Logic",Frontend Development,Backend Development,High,12.7,Mid,1,"TASK-022-004",Yes,"The core of the movement feature. Requires good knowledge of Unity's animation systems (coroutines, tweens) and synchronizing with game logic.","Use a simple `Vector3.Lerp` which would result in a straight line movement, cutting across the center of the board, instead of following the spaces."
TASK-022-006,"Implement Camera Follow for Token Movement",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-022-005",No,"A polish task that greatly improves user experience. Requires knowledge of camera scripting and smooth motion (e.g., using `SmoothDamp`).","Keep the camera static, forcing the player to manually pan/zoom to follow their token, which would be tedious."
US-029,"Manage my properties before rolling the dice",Backend Development,Frontend Development,High,20.9,Lead,1,"US-015,US-033,US-038,US-040,US-052",Yes,"This defines a critical part of the game loop. It's an architectural task that a Lead or Senior developer must own to ensure the turn phases are correctly managed.","Do not have a dedicated management phase. Allow management actions at any time, which violates official rules and can lead to confusing game states."
TASK-012-001,"Implement Game Turn State Machine",Backend Development,Quality Assurance,High,12.7,Lead,1,"TASK-009-002",Yes,"This is one of the most critical architectural components of the game. It must be designed and built by a Lead or Senior developer.","Use a simple monolithic method with lots of if/else statements to manage turns. This would be extremely brittle and hard to maintain or debug."
US-017,"Receive an extra turn after rolling doubles",Backend Development,Quality Assurance,Medium,4,Mid,1,"US-015,US-016,US-022",Yes,"A core rule that plugs into the turn state machine. A mid-level backend developer can implement this logic.","Ignore the doubles rule entirely, which would be a major deviation from standard Monopoly and unbalance the game."
TASK-012-002,"Implement Doubles Counter and Extra Turn Logic",Backend Development,Quality Assurance,Medium,4,Mid,1,"TASK-012-001",Yes,"Direct implementation of the doubles rule within the state machine.","",""
US-018,"Be sent to jail for rolling three consecutive doubles",Backend Development,Quality Assurance,Medium,4.2,Mid,1,"US-015,US-017,US-020",Yes,"Another core rule integrated into the turn state machine. Builds upon the doubles counter logic.","Remove the penalty for rolling three doubles, which unbalances the game by making doubles a purely positive outcome."
TASK-014-001,"Implement 'Three Doubles to Jail' Rule",Backend Development,Quality Assurance,Medium,4.2,Mid,1,"TASK-012-002",Yes,"Direct implementation of the three-doubles rule. Requires updating player status and position.","",""
US-019,"Collect $200 salary when passing or landing on GO",Backend Development,Quality Assurance,Low,4.2,Mid,1,"US-016,US-049",Yes,"A simple but fundamental game rule. A mid-level backend developer can implement this as part of the movement logic.","Change the salary amount or the condition for collecting it, which would alter the economic balance of the game."
TASK-013-001,"Implement 'Pass Go' Salary Logic",Backend Development,Quality Assurance,Medium,4.2,Mid,1,"TASK-012-001",Yes,"Logic needs to correctly detect the board wrap-around and handle the 'Go to Jail' exception.","",""
US-027,"Pay a fixed Luxury Tax amount",Backend Development,Frontend Development,Low,3.2,Mid,1,"US-016,US-038,US-047,US-052",Yes,"A simple, non-interactive space action. Requires backend logic for the transaction and UI for notification.","Make the tax a variable amount or introduce a choice, which would violate the official rules for this space."
TASK-013-002,"Implement Luxury Tax Space Action",Backend Development,Frontend Development,Low,3.2,Mid,1,"TASK-012-001",Yes,"Requires simple transaction logic and integration with the bankruptcy flow.","",""
US-028,"Experience no gameplay effect when landing on Free Parking",Backend Development,Quality Assurance,Low,1,Junior,1,"US-015,US-016,US-017,US-019",Yes,"The simplest rule to implement (a no-op). Suitable for a junior developer to get familiar with the turn state machine.","Implement a common 'house rule' like collecting all tax money in the center of the board. This is explicitly forbidden by REQ-1-003."
TASK-013-003,"Implement Free Parking Space Action (No-Op)",Backend Development,Quality Assurance,Low,1,Junior,1,"TASK-012-001",Yes,"An intentionally empty action handler within the turn state machine.","",""
US-044,"Automatically collect rent when an opponent lands on my property",Backend Development,Quality Assurance,High,19,Senior,1,"US-016,US-030,US-038,US-033,US-047",Yes,"This is a complex rule with many conditions. Requires a senior developer to create a robust and accurate Rent Calculation Engine.","Require the property owner to manually click a 'Collect Rent' button. This is not the official rule and would slow down gameplay."
US-045,"Automatically pay rent when I land on an opponent's property",Backend Development,Quality Assurance,High,0,Senior,1,"US-016,US-030,US-033,US-038,US-047",Yes,"This user story is the flip-side of US-044 and is implemented by the same set of tasks. The effort is captured in US-044.","",""
TASK-013-005,"Implement Rent Calculation Engine",Backend Development,Quality Assurance,High,12.7,Senior,1,"TASK-012-001",Yes,"High complexity due to multiple variables (monopoly, houses, railroads, utilities). Requires extensive unit testing to ensure correctness.","Use a simplified rent model that ignores some rules (e.g., doubled rent on monopolies). This would break game balance."
TASK-013-006,"Implement Rent Transaction Logic",Backend Development,Quality Assurance,High,6.3,Mid,1,"TASK-013-005",Yes,"Integrates the rent engine with the player transaction and bankruptcy systems.","",""
US-026,"Choose to pay $200 or 10% of my net worth for Income Tax",Backend Development,Frontend Development,High,12.6,Mid,2,"US-016,US-038,US-033,US-047",Yes,"Requires a backend dev for the complex Net Worth calculation and a UI dev for the choice dialog.","Force the player to pay a fixed amount, removing the strategic choice which is part of the official rules."
TASK-013-004,"Implement Net Worth Calculator Service",Backend Development,Quality Assurance,High,6.3,Mid,1,"TASK-009-001",Yes,"The calculation is complex as it must include cash, property list price (even if mortgaged), and building costs. Requires careful implementation and testing.","Use a simplified net worth calculation (e.g., just cash), which would lead to incorrect tax amounts and bad strategic decisions."
US-051,"Interact with modal dialogs for critical decisions",Frontend Development,Design,High,12.7,Mid,1,"US-030,US-041,US-026",Yes,"A foundational UI architecture story. Requires a mid-level UI developer to create a reusable system that pauses the game correctly.","Use non-modal popups that don't pause the game. This could lead to players missing critical decisions."
TASK-029-001,"Develop a Reusable Modal Dialog System",Frontend Development,Backend Development,High,12.7,Mid,1,"TASK-001-002",Yes,"Architectural task for the UI. A reusable system is more efficient than creating separate dialogs for every decision.","Hardcode a specific dialog for each use case. This leads to code duplication and makes future changes difficult."
TASK-029-002,"Implement Income Tax Dialog UI",Frontend Development,Backend Development,Medium,6.3,Mid,1,"TASK-029-001,TASK-013-004",Yes,"A specific implementation using the reusable modal system. Involves data binding to the Net Worth service.","",""
US-030,"Choose to buy an unowned property I land on",Backend Development,Frontend Development,High,14.6,Mid,2,"US-016,US-050",Yes,"A critical game loop feature. Requires a UI developer for the dialog and a backend developer for the transaction logic.","Properties are automatically auctioned when landed on, removing the choice to buy outright. This is a common house rule but not the official one."
TASK-015-001,"Implement Buy/Auction Property Dialog UI",Frontend Development,Backend Development,Medium,8.3,Mid,1,"TASK-029-001",Yes,"Specific use of the modal dialog system. Must correctly disable the 'Buy' button based on player cash.","",""
TASK-015-002,"Implement Buy Property Transaction Logic",Backend Development,Quality Assurance,High,6.3,Mid,1,"TASK-012-001,TASK-015-001",Yes,"Core economic transaction. Must be atomic and fire events to update the UI.","",""
US-031,"Choose to send an unowned property to auction instead of buying it",Backend Development,Frontend Development,Low,0,Mid,1,"US-030,US-032,US-016",Yes,"This is a choice within the same UI as US-030. The effort is captured in the UI task for that story.","Remove the auction rule entirely. If a player declines to buy, the property remains unowned. This significantly changes game strategy."
US-032,"Participate in an auction for a property",Backend Development,Data Engineering,High,29.6,Senior,2,"US-031,US-045",Yes,"A complex mini-game feature. Requires a senior dev for the auction state machine, a UI dev for the interface, and an AI dev for the bidding logic.","Simplify the auction to a single round of sealed bids. This is faster but removes the interactive bidding dynamic."
TASK-015-003,"Implement Property Auction UI",Frontend Development,Design,High,12.7,Mid,1,"TASK-029-001",Yes,"A complex, real-time updated modal dialog. A challenging UI task.","Use a series of simple prompts instead of a dedicated, real-time UI. This would be functional but have a poor user experience."
TASK-015-004,"Implement Auction State Machine",Backend Development,Quality Assurance,High,12.7,Senior,1,"TASK-012-001",Yes,"A complex sub-system with its own turn-based logic. Must be robust. Requires a senior developer.","",""
TASK-015-005,"Implement AI Bidding Logic Stub",Data Engineering,Backend Development,Medium,4.2,Mid,1,"TASK-015-004",Yes,"Initial AI logic for a core feature. An AI or backend developer can create this simple version.","AI always passes on auctions. This would make auctions a trivial exercise for the human player."
US-056,"Adjust master, music, and sound effect volumes independently",Frontend Development,Backend Development,Medium,16.6,Mid,2,"US-054",No,"Standard settings feature. Requires a UI dev for the sliders and a backend dev for persistence and mixer control.","Provide a single 'Mute' button only. This gives the user very little control over their audio experience."
TASK-030-004,"Set Up Unity AudioMixer",Frontend Development,Design,Medium,4,Mid,1,"TASK-001-002",No,"Requires a developer or technical artist with experience in Unity's audio systems.","Control volume on each AudioSource component individually. This is very difficult to manage globally and inefficient."
TASK-030-005,"Implement Volume Sliders UI",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-030-001",No,"Standard UI implementation task.","",""
TASK-030-006,"Implement Audio Settings Persistence",Backend Development,Frontend Development,Medium,6.3,Mid,1,"TASK-030-005,TASK-007-001",No,"Requires logic to save/load settings from a file and apply them on startup.","Do not persist settings. The volume would reset every time the game is launched, frustrating the player."
US-024,"Draw a Chance card when landing on a Chance space",Backend Development,Frontend Development,High,37.9,Lead,2,"US-016,US-018,US-019,US-047",Yes,"Complex feature with many different outcomes. Requires a lead/senior dev to design the flexible card action system and a UI dev for the display.","Remove cards from the game, making Chance spaces have no effect. This removes a core element of luck and variety from Monopoly."
US-025,"Draw a Community Chest card when landing on a Community Chest space",Backend Development,Frontend Development,High,0,Lead,1,"US-016,US-018,US-047",Yes,"This story is implemented by the same set of tasks as US-024, leveraging the same card action system. The effort is captured in US-024.","",""
TASK-016-001,"Implement Card Deck Manager Service",Backend Development,Quality Assurance,Medium,8.3,Mid,1,"TASK-009-002",Yes,"Core logic for managing the physical state of the decks. Requires careful implementation of shuffling and cycling.","Do not shuffle the decks; have them in a fixed order. This would make the game predictable and unfair."
TASK-016-002,"Define Card Data Schema and Load from JSON",Backend Development,Data Engineering,Medium,6.3,Mid,1,"TASK-016-001",Yes,"Important for making the game data-driven and localization-ready.","Hardcode all card text and actions directly in the code. This makes changes or translations extremely difficult."
TASK-016-003,"Implement Card Action System (Command Pattern)",Backend Development,Quality Assurance,High,17,Lead,1,"TASK-016-002",Yes,"A critical architectural decision to keep the card logic maintainable. A Lead or Senior dev should design this system.","Use a giant switch statement to handle all card actions. This would become a maintenance nightmare as the number of card types grows."
TASK-016-004,"Implement Card Display UI",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-029-001",No,"Requires a UI that can handle dynamic text and present it in a polished way.","Simply log the card text to a debug console. The player would have no idea what happened."
US-020,"Get out of jail by paying the $50 fine",Backend Development,Frontend Development,Medium,18.8,Mid,2,"US-018,US-049",Yes,"A core game rule. Requires backend logic for the transaction and a UI developer for the choice dialog.","Remove the option to pay, forcing players to rely on rolling doubles or using a card. This removes player agency."
US-021,"Get out of jail by using a 'Get Out of Jail Free' card",Backend Development,Frontend Development,Medium,0,Mid,1,"US-018,US-024,US-025,US-020",Yes,"This is a choice within the same UI and logic flow as US-020 and US-022. The effort is captured in the combined tasks.","",""
US-022,"Attempt to get out of jail by rolling for doubles",Backend Development,Frontend Development,Medium,0,Mid,1,"US-018,US-015,US-016",Yes,"This is a choice within the same UI and logic flow as US-020 and US-021. The effort is captured in the combined tasks.","",""
TASK-014-002,"Implement Core Jail State Logic",Backend Development,Quality Assurance,High,8.3,Mid,1,"TASK-012-001",Yes,"Part of the main turn state machine. Requires careful handling of player status and turn progression.","",""
TASK-014-003,"Implement 'Jail Options' UI",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-029-001",Yes,"A modal dialog that must dynamically enable/disable options based on the player's state (cash, cards).","",""
TASK-014-004,"Implement 'Use Get Out of Jail Free Card' Logic",Backend Development,Quality Assurance,Medium,4.2,Mid,1,"TASK-014-002,TASK-016-001",Yes,"Requires interaction between player state and the deck manager to return the card correctly.","",""
US-052,"Access a dedicated interface to manage all my properties",Frontend Development,Design,High,29.3,Mid,1,"US-029,US-033,US-038",No,"A major UI feature that is central to game strategy. Requires a mid-level UI developer to create a complex, data-driven screen.","Force players to manage properties by clicking on them directly on the 3D board. This could be slow and cumbersome."
TASK-026-001,"Implement Property Management UI Shell",Frontend Development,Design,Medium,8.3,Mid,1,"TASK-029-001",No,"Involves creating a new full-screen modal with complex layout requirements.","",""
TASK-026-002,"Create Dynamic Property Card UI Prefab",Frontend Development,Design,High,8.3,Mid,1,"TASK-026-001",No,"A complex, reusable UI component that needs to display a lot of information and have interactive elements.","",""
TASK-026-003,"Implement Property Management UI Data Binding",Frontend Development,Backend Development,High,12.7,Mid,1,"TASK-026-002",No,"The core logic of the screen. Requires dynamically instantiating prefabs and populating them with data from the game state.","",""
US-033,"Build houses on properties in a complete color set",Backend Development,Quality Assurance,High,29.2,Mid,1,"US-030,US-052,US-034,US-036",Yes,"A core economic and strategic mechanic. The logic behind it, especially with the 'even building' rule, is complex.","Do not allow building houses/hotels, which would remove the primary way to win the game."
US-034,"Enforce even building rule for property development",Backend Development,Quality Assurance,High,0,Mid,1,"US-033,US-052,US-038",Yes,"This is a business rule that is implemented as part of the building logic in US-033. The effort is captured there.","Allow players to build unevenly. This would unbalance the game, allowing players to pour all their money into one high-rent property."
US-035,"Upgrade a set of 4 houses to a single hotel",Backend Development,Quality Assurance,High,0,Mid,1,"US-033,US-034,US-052",Yes,"This is the final step of the building process. The logic is part of the overall building system and its effort is captured in the combined tasks.","",""
TASK-015-006,"Implement Core Building Transaction Logic",Backend Development,Quality Assurance,High,8.3,Mid,1,"TASK-012-001",Yes,"Handles the financial transaction and inventory management for buildings. Must be atomic.","",""
TASK-015-007,"Implement 'Even Building' Rule Validator",Backend Development,Quality Assurance,High,8.3,Mid,1,"TASK-015-006",Yes,"The most complex part of the building logic. Requires checking state across a group of related properties.","",""
TASK-015-008,"Implement Hotel Upgrade Logic",Backend Development,Quality Assurance,High,6.3,Mid,1,"TASK-015-007",Yes,"Specific logic for the hotel transaction, which involves returning houses to the bank.","",""
TASK-026-004,"Implement Build/Sell Button Logic in UI",Frontend Development,Backend Development,Medium,6.3,Mid,1,"TASK-026-003,TASK-015-006",No,"Connects the UI buttons to the backend building service and manages their enabled/disabled state based on the rules.","",""
US-038,"Mortgage an undeveloped property to get cash",Backend Development,Frontend Development,Medium,12.5,Mid,1,"US-052,US-044",No,"A core economic action. Requires backend transaction logic and UI integration into the property management screen.","Remove the ability to mortgage properties, making it much harder for players to raise cash and avoid bankruptcy."
US-039,"Unmortgage a property by paying the principal plus 10% interest",Backend Development,Frontend Development,Medium,0,Mid,1,"US-038,US-052,US-044",No,"The counterpart to mortgaging. It's implemented by the same set of tasks and the effort is captured in US-038.","",""
TASK-015-011,"Implement Mortgage/Unmortgage Transaction Logic",Backend Development,Quality Assurance,High,8.3,Mid,1,"TASK-012-001",Yes,"Handles the financial transactions for both mortgaging and unmortgaging. The 10% interest calculation must be correct.","",""
TASK-026-005,"Implement Mortgage/Unmortgage Button Logic in UI",Frontend Development,Backend Development,Medium,4.2,Mid,1,"TASK-026-003,TASK-015-011",No,"Adds the buttons to the property card and manages their state based on rules (e.g., can't mortgage with buildings).","",""
US-023,"Be forced to pay the fine after failing to roll doubles for 3 turns in jail",Backend Development,Quality Assurance,Medium,6.3,Mid,1,"US-022,US-038,US-047",Yes,"An important edge case of the jail rules that prevents players from being stuck indefinitely.","Allow players to stay in jail forever if they keep failing their rolls. This would stall and ruin the game."
TASK-014-005,"Implement Forced Jail Payment Logic",Backend Development,Quality Assurance,High,6.3,Mid,1,"TASK-014-002",Yes,"Requires integration with the bankruptcy flow if the player cannot afford the fine.","",""
US-036,"Notify player of building shortage when attempting to build",Frontend Development,Backend Development,Low,4.2,Mid,1,"US-033,US-052",No,"An important feedback feature for a nuanced rule. Requires a backend check and a UI notification.","Do not inform the player. The build button would just be disabled, leaving the user to guess why."
TASK-015-009,"Implement Building Shortage Rule",Backend Development,Quality Assurance,Medium,4.2,Mid,1,"TASK-015-006",Yes,"A simple validation check against the bank's inventory in the building service.","",""
TASK-012-003,"Integrate Management Actions into Pre-Roll Phase",Backend Development,Frontend Development,High,6.3,Lead,1,"TASK-012-001,US-052,US-053",Yes,"A critical integration task for the tech lead to ensure the turn state machine correctly controls the availability of all player actions.","",""
US-053,"Use a two-panel interface to build and review trade offers",Frontend Development,Design,High,31.3,Mid,1,"US-040,US-041,US-042",No,"A very complex UI feature that is central to the trading mechanic. It's a significant piece of work for a mid-level UI developer.","Use a simpler, list-based interface. This would be much harder for players to visualize and understand the trade."
TASK-027-001,"Design and Implement Trade UI Shell",Frontend Development,Design,High,12.7,Mid,1,"TASK-029-001",No,"The layout and structure of this UI are complex and need to convey a lot of information clearly.","",""
TASK-027-002,"Implement Asset Selection and Offer Panel Logic",Frontend Development,Backend Development,High,8.3,Mid,1,"TASK-027-001",No,"The interaction logic for moving items between inventory and offer panels is non-trivial.","",""
TASK-027-003,"Define and Implement Trade Offer Data Model",Backend Development,Data Engineering,Medium,4,Mid,1,"TASK-009-001",Yes,"A data structure to represent a pending trade, which is then passed to the AI for evaluation.","",""
TASK-027-04,"Implement Player-Initiated Trade Flow",Backend Development,Data Engineering,High,6.3,Mid,1,"TASK-027-002,TASK-027-003,TASK-018-001",No,"The final step of wiring the UI to the backend AI service.","",""
TASK-018-001,"Implement Behavior Tree Framework",Data Engineering,Backend Development,High,12.7,Senior,1,"TASK-001-002",Yes,"A major architectural task for the AI system. Requires a senior developer with experience in AI patterns.","Use a massive switch statement or nested if-else block for AI logic. This would be completely unmaintainable and impossible to scale."
TASK-018-002,"Implement AI Configuration Loader",Data Engineering,Backend Development,Medium,6.3,Mid,1,"TASK-018-001",Yes,"A key part of making the AI tunable. Involves file I/O and JSON parsing.","Hardcode all AI parameters. This would make tuning the AI difficulty levels an extremely slow process requiring a recompile for every change."
TASK-018-003,"Implement Basic AI Turn Executor",Data Engineering,Backend Development,High,8.3,Mid,1,"TASK-018-001,TASK-012-001",Yes,"The initial skeleton of the AI's brain. It needs to correctly interface with the main turn state machine.","",""
US-041,"Respond to a trade offer from an AI opponent",Frontend Development,Backend Development,Medium,8.3,Mid,1,"US-053,US-040,US-032",No,"Requires the trade UI to be able to be populated by an incoming AI offer, presenting a different set of actions to the user.","AI never initiates trades, only responds. This would make the AI feel much more passive and less engaging."
TASK-027-005,"Implement AI Trade Proposal Dialog",Frontend Development,Backend Development,High,8.3,Mid,1,"TASK-027-001",No,"This task adapts the main trade UI for the specific case of an incoming proposal.","",""
US-042,"Propose a counter-offer to an AI's trade proposal",Frontend Development,Backend Development,Medium,8.3,Mid,1,"US-041,US-053",No,"Adds another layer of interaction to the trading system, making it more dynamic.","Only allow 'Accept' or 'Decline'. The player would have to manually re-initiate a new trade to propose a change, which is cumbersome."
TASK-027-006,"Implement Counter-Offer Flow Logic",Frontend Development,Backend Development,High,8.3,Mid,1,"TASK-027-005",No,"Requires the UI to transition from a 'review' state to an 'edit' state.","",""
TASK-019-001,"Develop AI Property Valuation Model",Data Engineering,Backend Development,High,8.3,Senior,1,"TASK-018-001",Yes,"The core of the AI's strategic thinking. A simple model is easy, but a good one is very complex. Requires a senior AI/backend developer.","AI values properties only at their list price. This would make the AI a very poor strategic player."
TASK-019-002,"Develop AI Trade Evaluation Logic",Data Engineering,Backend Development,High,17,Senior,1,"TASK-019-001",Yes,"A very complex piece of AI logic that uses the valuation model to make nuanced decisions. This is the heart of the trading AI.","AI uses a simple rule, e.g., 'only accept trades where the cash value of items received is greater'. This would be easy to exploit."
TASK-019-003,"Develop AI Property Purchase/Auction Strategy",Data Engineering,Backend Development,High,8.3,Mid,1,"TASK-019-001",Yes,"AI logic for a key economic decision. Must be balanced for each difficulty level.","AI always buys any property it lands on if it can afford it. This is a very naive strategy."
TASK-019-004,"Develop AI Building Strategy",Data Engineering,Backend Development,High,12.7,Senior,1,"TASK-019-001",Yes,"Complex AI logic that involves long-term planning (saving for monopolies, creating housing shortages).","AI builds houses randomly whenever it has a monopoly and enough cash. This would be a very weak strategy."
TASK-019-005,"Develop AI Mortgage Strategy",Data Engineering,Backend Development,Medium,8.3,Mid,1,"TASK-019-001",No,"AI logic for when to liquidate assets. Needs to be smart to avoid mortgaging valuable properties unnecessarily.","AI mortgages properties randomly when it needs cash. This could lead to it mortgaging a key property from a valuable monopoly."
US-043,"Receive a non-intrusive notification when AI players trade with each other",Frontend Development,Backend Development,Low,7.2,Junior,1,"US-040,US-010",No,"A polish feature that improves player awareness. A junior developer can implement the UI and event listener.","Do not notify the player. The player would be surprised when an AI suddenly has a monopoly they didn't have a turn ago."
TASK-020-001,"Implement AI-to-AI Trade Notification UI",Frontend Development,Design,Medium,4.2,Junior,1,"TASK-001-002",No,"Requires creating a self-dismissing 'toast' notification prefab.","",""
TASK-020-002,"Implement Trade Completed Event Listener",Frontend Development,Backend Development,Low,3,Junior,1,"TASK-020-001",No,"Simple task to subscribe to a backend event and trigger the UI.","",""
US-037,"Participate in an auction for the last available buildings",Backend Development,Data Engineering,High,17,Lead,1,"US-033,US-034,US-036",No,"A rare but complex edge case rule. Requires a tech lead to oversee the integration of rules, UI, and AI for this special auction type.","If there's a building shortage, no one can build. This is simpler but not the official rule and removes a layer of strategy."
TASK-015-010,"Implement Building Shortage Auction Logic",Backend Development,Data Engineering,High,17,Lead,1,"TASK-015-009,TASK-015-004,TASK-019-004",No,"This is a very high complexity task as it combines the logic of building validation, auctions, and AI bidding into a new, unique flow.","",""
TASK-010-004,"Create Curated Test Save Game Files",Quality Assurance,Backend Development,Medium,8.3,Mid,1,"US-061",No,"A critical task for enabling efficient QA. Requires a QA engineer with technical skills to create or edit JSON save files.","Rely on manual play to get into specific game states for testing. This is extremely time-consuming and makes testing edge cases unreliable."
US-047,"See a game-over screen when I go bankrupt",Backend Development,Frontend Development,High,52.5,Lead,3,"US-045,US-038,US-048",Yes,"The culmination of the entire game loop. Requires a lead to oversee the complex interactions between the bankruptcy engine, AI simulation, and multiple UI screens.","Simply quit to the main menu on bankruptcy. This would be an abrupt and unsatisfying end to the game."
US-046,"See a victory screen when I am the last player remaining",Frontend Development,Design,High,0,Mid,1,"US-011,US-047,US-048,US-064,US-066",Yes,"This is the win-condition counterpart to US-047. The effort is captured in the combined tasks for the game-end sequence.","",""
US-048,"View a detailed game summary screen after a match ends",Frontend Development,Backend Development,High,0,Mid,1,"US-046,US-047,US-013",Yes,"The final screen of the game loop. The effort is captured in the combined tasks for the game-end sequence.","",""
TASK-017-001,"Implement Bankruptcy Rule Engine",Backend Development,Quality Assurance,High,12.7,Senior,1,"TASK-013-004,TASK-015-011",Yes,"A very complex and critical piece of the rule engine. Requires a senior developer to ensure all asset liquidation rules are handled correctly.","A simplified bankruptcy check (e.g., just cash on hand). This would violate official rules, as players must be able to liquidate assets."
TASK-017-002,"Implement Asset Transfer Logic (Player to Player)",Backend Development,Quality Assurance,High,8.3,Mid,1,"TASK-017-001",Yes,"Complex transaction logic that must handle all asset types correctly.","",""
TASK-017-003,"Implement Asset Transfer Logic (Player to Bank)",Backend Development,Quality Assurance,High,6.3,Mid,1,"TASK-017-001,TASK-015-004",Yes,"Requires integration with the auction system, adding complexity.","",""
TASK-017-004,"Implement Win/Loss Condition Check",Backend Development,Quality Assurance,Medium,4.2,Lead,1,"TASK-017-001",Yes,"The trigger for the entire game-end sequence. A simple check but with high architectural impact.","",""
TASK-017-005,"Implement High-Speed AI Simulation Mode",Data Engineering,Backend Development,High,12.7,Lead,1,"TASK-017-004,TASK-018-003",No,"A complex feature that requires running the game logic without any UI updates or delays. A tech lead should oversee this.","Don't simulate the rest of the game. End the match when the human player is bankrupt. This means stats for the AI winner can't be recorded."
TASK-017-006,"Implement Game Over and Victory Screen UI",Frontend Development,Design,Medium,8.3,Mid,1,"TASK-029-001",No,"UI task to create the end-game screens.","",""
TASK-017-007,"Implement Game Summary Screen UI",Frontend Development,Design,Medium,8.3,Mid,1,"TASK-017-006",No,"A data-driven UI screen that must dynamically adapt to the number of players.","",""
TASK-030-007,"Implement Save Game UI Screen",Frontend Development,Design,Medium,8.3,Mid,1,"TASK-030-001",No,"The UI for saving. Needs to read metadata from existing save files to display their status.","",""
TASK-007-005,"Implement Load Game UI Screen",Frontend Development,Design,Medium,8.3,Mid,1,"TASK-024-001",No,"The UI for loading. Similar to the save screen.","",""
TASK-007-006,"Update Load Game UI for Invalid States",Frontend Development,Backend Development,Medium,4.2,Mid,1,"TASK-007-005,TASK-007-004",No,"Adds error state visuals to the load screen, improving user experience.","",""
TASK-006-005,"Implement Statistics Aggregation Logic",Backend Development,Data Engineering,High,8.3,Mid,1,"TASK-006-001,TASK-017-004",No,"The logic that runs at the end of a game to update the persistent database. Must be a transactional operation.","",""
TASK-006-006,"Implement Player Statistics UI Screen",Frontend Development,Backend Development,Medium,6.3,Mid,1,"TASK-006-005",No,"A simple data display screen. UI dev fetches data from the backend repository and populates text fields.","",""
US-064,"View a list of my top 10 victories",Backend Development,Frontend Development,Medium,12.6,Mid,2,"US-011,US-046,US-048",No,"Requires backend logic for querying/updating the high score table and a UI dev for the display.","Only track overall win/loss stats, not a ranked high score list. This reduces the incentive for players to achieve high-value wins."
TASK-006-007,"Implement High Score Update and Query Logic",Backend Development,Data Engineering,High,6.3,Mid,1,"TASK-006-001,TASK-017-004",No,"Requires a more complex, sorted query than the general stats. The update logic must correctly handle inserting a new score and removing the lowest one.","",""
TASK-006-008,"Implement High Score UI Screen",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-006-007",No,"A UI screen with a formatted table/list to display the ranked scores.","",""
US-065,"Export my top score history to a text file",Backend Development,Frontend Development,Low,4.2,Junior,1,"US-064",No,"A simple 'nice-to-have' feature. A junior dev can handle the logic of fetching data, formatting it to a string, and writing to a file.","Do not offer an export feature. Players would have to take a screenshot to share their scores."
TASK-006-009,"Implement High Score Export Logic",Backend Development,Frontend Development,Medium,4.2,Junior,1,"TASK-006-008",No,"Involves triggering a native Windows file save dialog, which can be slightly tricky from Unity.","",""
US-055,"Adjust the game speed to make animations faster or instant",Backend Development,Frontend Development,High,11.5,Lead,1,"US-054,US-061,US-062",No,"A high-impact UX feature. Requires a lead or senior dev to refactor all timed/animated events to respect a central speed controller.","Do not allow game speed adjustment. Players who want a faster game may become frustrated and stop playing."
TASK-030-008,"Implement Game Speed Controller",Backend Development,Quality Assurance,High,8.3,Lead,1,"TASK-022-005,TASK-018-003",No,"A critical architectural refactor. All animations and delays must be piped through this service.","",""
TASK-030-009,"Implement Game Speed UI Controls",Frontend Development,Design,Low,3.2,Mid,1,"TASK-030-001,TASK-030-006",No,"Standard settings UI implementation.","",""
US-057,"Reset all my historical statistics and high scores",Backend Development,Frontend Development,Low,7.2,Mid,2,"US-013,US-064,US-054",No,"A standard data management feature. Requires a backend dev for the DB operation and a UI dev for the button and confirmation.","Require players to manually delete the SQLite file in their AppData folder. This is not user-friendly and risky."
US-058,"Provide a bulk deletion option for all saved games via the settings menu",Backend Development,Frontend Development,Low,0,Mid,1,"US-054,US-061",No,"Similar to US-057 but for save files. The effort is captured in the combined tasks.","Require players to manually delete files in their AppData folder.",""
TASK-030-010,"Implement Data Management Buttons and Confirmation UI",Frontend Development,Design,Low,3,Mid,1,"TASK-030-001",No,"Requires adding buttons and a reusable confirmation dialog to the settings screen.","",""
TASK-030-011,"Implement Reset Statistics Logic",Backend Development,Data Engineering,Medium,4.2,Mid,1,"TASK-006-001",No,"A simple but destructive database operation. Must be transactional.","",""
TASK-030-012,"Implement Delete All Saves Logic",Backend Development,DevOps,Low,3.2,Mid,1,"TASK-007-001",No,"A simple but destructive file system operation.","",""
US-066,"Change the game's visual and audio theme",Backend Development,Frontend Development,High,61,Lead,2,"US-054",No,"A major feature requiring significant architectural work. A lead must oversee the creation of a ThemeManager and the refactoring of all asset-loading code. High effort.","Offer a single, non-changeable theme. This reduces replayability and personalization."
TASK-023-001,"Implement Theme Manager Service",Backend Development,Frontend Development,High,12.7,Lead,1,"TASK-001-002",No,"The core architectural component for the theming system. Must be designed by a Lead or Senior dev.","",""
TASK-023-002,"Integrate Addressable Asset System for Theme Assets",DevOps,Frontend Development,High,8.3,Lead,1,"TASK-023-001",No,"Requires expertise in Unity's Addressables system for dynamic content management.","Hardcode asset references, and use a large switch statement to change them. This would be extremely brittle and inefficient."
TASK-023-003,"Implement Theme Selection UI in Settings",Frontend Development,Design,Medium,6.3,Mid,1,"TASK-030-001",No,"UI for selecting the theme.","",""
TASK-023-004,"Refactor UI Systems for Theming",Frontend Development,Backend Development,High,12.7,Mid,1,"TASK-023-001,US-049",No,"A significant refactoring task. All UI components must be modified to load assets dynamically.","",""
TASK-023-005,"Refactor Board and Token Rendering for Theming",Frontend Development,Backend Development,High,12.7,Mid,1,"TASK-023-001,US-014",No,"Similar refactoring task for all 3D assets on the game board.","",""
TASK-023-006,"Refactor Audio System for Theming",Backend Development,Frontend Development,Medium,8.3,Mid,1,"TASK-023-001,TASK-030-004",No,"Refactoring task for all audio assets.","",""
US-059,"Start an optional interactive tutorial to learn the game",Frontend Development,Backend Development,High,38,Lead,2,"US-008,US-015,US-016,US-030,US-044,US-049",No,"A complex feature that requires a scripting engine and deep hooks into the game and UI systems. A lead should oversee its architecture.","Do not provide a tutorial. Players must learn by reading the rulebook or by trial and error, which increases the barrier to entry."
TASK-031-001,"Implement Tutorial Scripting Engine",Backend Development,Frontend Development,High,17,Lead,1,"TASK-012-001",No,"A major architectural task to create a data-driven tutorial system.","Hardcode the tutorial sequence. This makes it impossible to change or translate without recoding."
TASK-031-002,"Implement UI Highlighting and Input Blocking System",Frontend Development,Design,High,8.3,Mid,1,"TASK-031-001",No,"A complex UI task that requires overlaying canvases and manipulating the event system to control input.","Use simple text prompts only, without highlighting. This would be less clear for the user."
TASK-031-003,"Create and Implement Tutorial Script Content",Design,Product Management,Medium,12.7,Mid,1,"TASK-031-001",No,"This is a content creation task, requiring a designer or PM to write the tutorial steps and text in the defined JSON format.","",""
US-060,"Access and search a digital rulebook from game menus",Frontend Development,Backend Development,Medium,18.8,Mid,2,"US-054,US-008",No,"A helpful UX feature. Requires a UI developer for the screen and search logic, and a backend dev for loading the data from JSON.","Provide the rulebook as a PDF file that opens externally. This is a clunky experience that takes the user out of the game."
TASK-032-001,"Implement Rulebook UI",Frontend Development,Design,Medium,8.3,Mid,1,"TASK-029-001",No,"A UI screen focused on clear, readable text presentation with a search bar.","",""
TASK-032-002,"Implement Rulebook Data Loader",Backend Development,Data Engineering,Low,4.2,Mid,1,"TASK-032-001",No,"Simple file I/O and JSON parsing task.","",""
TASK-032-003,"Implement Rulebook Search Functionality",Frontend Development,Backend Development,Medium,6.3,Mid,1,"TASK-032-001,TASK-032-002",No,"Requires implementing a real-time filter and text highlighting, which can be a moderately complex UI task.","",""
US-067,"Be notified of available game updates on startup",Backend Development,Frontend Development,Low,8.4,Mid,2,"",No,"A 'nice-to-have' feature for post-launch support. Requires a simple async web request and a UI notification.","Do not implement an update checker. Players would have to manually check the game's website for new versions."
TASK-001-004,"Implement Update Checker Service",Backend Development,DevOps,Medium,4.2,Mid,1,"TASK-001-002",No,"Requires asynchronous web request logic and silent error handling.","",""
TASK-028-001,"Implement Update Notification UI",Frontend Development,Design,Low,4.2,Junior,1,"TASK-024-001,TASK-001-004",No,"A simple UI element on the main menu that is shown/hidden based on the checker's result.","",""
US-068,"View the game's data privacy statement",Frontend Development,Product Management,Low,3.2,Junior,1,"",No,"A simple legal/informational feature. Requires a UI developer to create a simple text panel.","Do not include a privacy statement. While the game is offline, this is still a standard practice and shows transparency to the user."
TASK-001-005,"Implement Data Privacy Statement UI and Loader",Frontend Development,Design,Low,3.2,Junior,1,"TASK-024-001",No,"A very simple UI task: a modal with a scrollable text area.","",""
TASK-010-003,"Create Core Logic and Rule Engine Unit Test Suite",Quality Assurance,Backend Development,High,17,Senior,1,"TASK-010-001,US-013",Yes,"A critical task for ensuring game integrity. Requires a senior developer or dedicated QA engineer with strong coding skills to write comprehensive tests for the complex rule engine.","Rely on manual testing for the rule engine. This is extremely risky and likely to miss critical edge-case bugs."
TASK-010-005,"Full Manual QA and Regression Pass",Quality Assurance,Product Management,High,40,Mid,2,"",No,"A dedicated, time-boxed activity for the QA team to perform full end-to-end testing before release. This is a crucial step to catch integration bugs.","Release the game after only developer-led testing. This is highly likely to result in a buggy release and poor user reviews."