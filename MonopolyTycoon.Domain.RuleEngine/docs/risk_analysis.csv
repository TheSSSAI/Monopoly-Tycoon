risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
RISK-T-001,Technical,"The bankruptcy logic is highly complex and involves critical, atomic state changes (asset liquidation, transfer, auction). A bug could corrupt the game state, leading to soft-locks or incorrect game outcomes, making the game unfinishable.",4,5,20,High,"WI-020, WI-025, WI-015",High logical complexity with numerous edge cases and the need for transactional data integrity.,Implement the entire bankruptcy process as a single, atomic transaction that can be rolled back on failure. Develop a comprehensive suite of unit and integration tests using pre-configured save files (REQ-1-027) that cover all bankruptcy scenarios (to player, to bank, etc.). Prioritize this module for peer code review.,Allocate dedicated QA cycles specifically for manual bankruptcy testing. If critical bugs are found late in the development cycle, a patch will be prioritized for immediate post-launch release.,Unit test coverage for the Bankruptcy module drops below 85%. More than two high-severity bugs related to bankruptcy are found in a single QA cycle.,Tech Lead,2025-09-15,Not Started
RISK-T-002,Technical,"The AI Behavior Tree, especially for trading and auction bidding, may be difficult to balance. The 'Hard' AI could be either unbeatable/predictable or the 'Easy' AI could be nonsensically passive, leading to a poor gameplay experience.",4,4,16,High,"WI-014, WI-019, WI-034, WI-035, WI-036",AI balancing is an iterative and subjective process, not just a matter of correct implementation.,Externalize all AI decision-making parameters into the JSON configuration file (REQ-1-063) to allow for rapid tuning without recompiling. Implement a debug mode to visualize AI decision paths and logs. Schedule regular playtesting sessions focused solely on AI feedback.,If balancing proves too time-consuming, the 'Hard' difficulty may be simplified to be more aggressive but less strategic for the initial release, with improvements planned for a post-launch update.,Player feedback from playtesting indicates any single AI difficulty is either always winning or always losing. AI tuning requires more than 3 person-days per week.,AI Lead,2025-10-31,Not Started
RISK-T-003,Technical,"The dynamic theming system (REQ-1-093) requires a loosely coupled architecture where no assets are hard-referenced. If not architected correctly from the start, it will be nearly impossible to retrofit, leading to massive technical debt or a dropped feature.",3,5,15,High,"WI-033, WI-030, WI-032, WI-027",Architectural complexity; requires disciplined adherence to asset loading patterns across the entire codebase.,Mandate the use of an asset management system (like Addressables or ScriptableObject-based theme registries) from day one. All asset loading must go through a centralized `ThemeManager`. Conduct early proof-of-concept spikes to validate the architecture. Code reviews must reject any direct asset references.,If the full system proves too complex, scope will be reduced to only theming the UI and board textures, leaving tokens and audio as-is for the initial release. A full refactor will be scheduled post-launch.,A developer hard-codes a reference to a specific prefab or material instead of loading it through the ThemeManager. The time to switch themes exceeds 5 seconds in performance testing.,Tech Lead,2025-06-30,Not Started
RISK-Q-001,Quality,"The 'even building' rule (REQ-1-054) for houses/hotels, especially the reverse logic for selling, is notoriously difficult to implement correctly. A bug would violate a core game rule and be immediately obvious to experienced players.",4,3,12,Medium,"WI-016, WI-028",High logical complexity with many state conditions to check across a group of properties.,Implement the validation logic in a dedicated, stateless service within the core logic library. Use Test-Driven Development (TDD) to create unit tests for every possible build/sell scenario on 2- and 3-property monopolies before writing the implementation.,If bugs persist, add a 'developer cheat' to bypass the rule for internal testing of other features, but block release until the rule is correctly implemented. Allocate extra QA time for manual verification.,A bug related to the even building rule is reported after the feature was considered complete. Unit test coverage for `RuleEngine_Building.cs` is below 90%.,QA Lead,2025-08-29,Not Started
RISK-T-004,Technical,"The `GameState` object serialization/deserialization (REQ-1-087) is critical for the save/load feature. Forgetting to serialize even one new field can lead to corrupted save files or inconsistent state upon loading, which can be very difficult to debug.",4,3,12,Medium,"WI-006, WI-037, WI-038",High complexity of the central `GameState` object graph and risk of human error when modifying it.,Implement an automated integration test that performs a full save-load-verify cycle. This test will save the game, load it back immediately, and then perform a deep equality check on the original and loaded `GameState` objects. This test must be run as part of the pre-commit checks.,If serialization bugs are frequent, implement a version of the `GameState` object specifically for serialization (a DTO) to decouple it from the live game logic, adding a mapping layer between them.,The save-load-verify integration test fails. A bug is reported where loading a game results in an incorrect or broken state.,Dev Team,2025-09-30,Not Started
RISK-P-001,Performance,"The requirement to maintain a minimum of 45 FPS (REQ-1-014) on recommended hardware could be compromised by unoptimized 3D assets, inefficient UI updates (especially the HUD), or heavy AI calculations.",3,4,12,Medium,"WI-009, WI-027, WI-031, WI-035, WI-036",Combination of high-quality 3D graphics, real-time UI, and complex AI logic on a non-AAA engine budget.,Establish performance budgets (e.g., poly count, draw calls, CPU time per frame) early in development. Conduct regular performance profiling sessions on a machine with the 'recommended' hardware specs. AI calculations must be performed asynchronously or time-sliced to not cause frame rate spikes.,If performance targets are not met, visual quality will be reduced (e.g., simpler shaders, lower poly models, reduced particle effects). The 'Hard' AI's thinking process may be simplified to reduce CPU load.,The average FPS drops below 50 during a typical gameplay test on the target hardware. A single frame spike exceeds 33ms.,Performance Engineer,2025-10-15,Not Started
RISK-T-005,Technical,"The game's turn-based state machine (REQ-1-038) has many complex states and transitions (e.g., handling doubles, jail states, auctions, player decisions). A flaw in the state machine could lead to players getting stuck, turns being skipped, or actions being allowed at incorrect times.",3,4,12,Medium,"WI-007, WI-010, WI-014",Inherent complexity of managing a game loop with numerous states and asynchronous events (like player input or animations).,Implement the `TurnManager` using a formal state machine pattern (e.g., State Pattern) instead of a large switch statement. Use event-driven architecture to decouple the state machine from other systems. Log every state transition at the DEBUG level for easier diagnostics.,If the state machine becomes too buggy, a simplified turn structure might be adopted for the initial release (e.g., removing the pre-roll management phase and forcing all management to be post-roll), with a refactor planned for a future update.,A bug is reported where a player's turn does not end correctly, or an action is possible outside the correct turn phase.,Tech Lead,2025-07-31,Not Started
RISK-R-001,Resource,"The project requires a niche skill in Inno Setup and its Pascal Script language for the installer (REQ-1-012, REQ-1-100). If the assigned developer is unavailable, it could be difficult to find a replacement, causing a delay in the release pipeline.",2,4,8,Medium,WI-005,Dependency on a specialized, non-mainstream technology.,Ensure at least two developers are familiarized with the Inno Setup script. The script must be well-documented with comments explaining the custom logic (especially for the conditional data deletion). Keep the script under version control.,If the primary developer is lost, engage a short-term contractor specializing in installer technologies. As a last resort, release the game as a simple ZIP archive while the installer is being fixed.,The primary developer responsible for the installer script is reassigned or leaves the project. No one else has committed changes to the .iss file in over a month.,Project Manager,2025-11-15,Not Started
RISK-E-001,External,"The project depends on obtaining a valid code signing certificate to sign the installer and avoid Windows Defender warnings. The procurement process from a Certificate Authority can have unexpected delays or verification issues.",2,4,8,Medium,WI-005,Dependency on a third-party vendor and their validation processes.,Start the process of purchasing the code signing certificate at the beginning of the project, not near the end. Assign a dedicated person to manage the application and verification process with the vendor.,If the certificate is delayed, the initial beta releases will be distributed as unsigned executables with clear instructions to users on how to bypass the security warnings. The public release will be blocked until the certificate is obtained.,The code signing certificate has not been successfully procured 4 weeks before the scheduled release date.,Project Manager,2025-04-30,Not Started
RISK-Q-002,Quality,"The data migration mechanism for old save files (REQ-1-090) is inherently risky. A bug in the migration logic could permanently corrupt a player's save file, leading to a very negative user experience.",2,4,8,Medium,WI-038,Complexity of correctly and safely transforming data between different schema versions.,The migration process must be atomic: create a backup of the original file, attempt the migration on the copy, and only replace the original file upon success. Any failure must restore the backup. The system needs extensive unit testing for each migration path.,If migration proves too unreliable, the feature will be changed to mark old saves as 'Incompatible' without attempting migration, forcing the user to start a new game but preserving their old (unusable) save file.,A bug is reported where a player's save file was corrupted after a game update. The migration logic lacks unit tests for a specific version-to-version path.,QA Lead,2025-10-01,Not Started
RISK-TL-001,Timeline,"The project has a high number of interconnected, high-complexity features (AI, Trading, Auctions, Bankruptcy). An underestimation of the time required for any one of these can have a cascading delay effect on the entire project timeline.",3,3,9,Medium,"WI-014, WI-019, WI-020, WI-036",High degree of feature complexity and interdependency.,Prioritize building and testing the core game loop and rules engine first. Develop features in vertical slices that are testable end-to-end. Use feature flags to disable incomplete complex features (like AI trading) to allow for a stable build for testing other parts of the game.,If a major delay occurs in one complex feature (e.g., AI trading), it may be descoped from the initial v1.0 release to protect the launch date. It would then be added in a subsequent major update.,A high-complexity work item (e.g., WI-019) is more than 50% behind its estimated completion time at its midpoint review.,Project Manager,2025-07-01,Not Started
RISK-T-006,Technical,"The global exception handler (WI-003) must display a UI dialog. If the exception was caused by a critical failure in the UI rendering system itself, the handler might be unable to display the dialog, resulting in a hard crash with no user feedback.",2,3,6,Low,WI-003,The error handling system relies on a subsystem that might be the source of the error.,Implement the error dialog using a separate, minimal Unity Canvas and EventSystem that is independent of the main game UI. This reduces the chance that a game UI crash will also crash the error dialog system.,If displaying the dialog in-engine is unreliable, the exception handler's final fallback will be to write the error log and then attempt to open a native Windows message box using P/Invoke calls, providing a more basic but robust notification.,During testing, an unhandled exception related to the main UI canvas prevents the error dialog from appearing.,Dev Team,2025-06-15,Not Started