risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
RISK-TECH-001,Technical,"The atomicity of transactions (e.g., bankruptcy, trading, saving) is not properly implemented, leading to corrupted GameState objects, data loss, or game crashes.","4","5","20","High","WI-008, WI-014, WI-015, WI-019, WI-030, WI-031","High complexity in managing state changes across multiple objects (PlayerState, BankState, BoardState) simultaneously.","Implement a transactional command pattern where operations can be rolled back on failure. Enforce a strict rule that only dedicated service layers can mutate the GameState. Write specific integration tests for failure/rollback scenarios.","Allocate a dedicated 'bug-fixing' sprint to stabilize the state management core before building more features on top. If the pattern is flawed, halt feature work to refactor the state management kernel.","Integration tests for bankruptcy or save/load fail intermittently. QA reports scenarios where the UI becomes desynchronized from the backend game data.","Tech Lead",2025-02-28,Open
RISK-TECH-002,Technical,"The AI Behavior Tree (BT) becomes overly complex, leading to unpredictable, buggy, or poorly performing AI that is difficult to debug and balance across three difficulty levels.","4","4","16","High","WI-017, WI-018, WI-019","Inherent complexity of creating believable and balanced AI. The BT could grow into a monolithic, unmanageable structure.","Design the BT with modular, reusable sub-trees. Aggressively use the external JSON configuration (REQ-1-063) to allow tuning without code changes. Implement verbose DEBUG logging for AI decision paths to trace logic.","Simplify the AI's strategic goals for the initial release if balancing becomes a time sink. Focus on making the 'Medium' AI robust and differentiate 'Easy'/'Hard' primarily through parameter tuning rather than complex logic branches.","AI behavior in playtests does not match its difficulty profile. Developers spend excessive time debugging a single AI decision.","AI Lead",2025-04-30,Open
RISK-TECH-003,Technical,"The data migration mechanism for save files and the statistics database fails on an edge case, causing permanent loss of a user's progress upon updating the game.","3","5","15","High","WI-032, WI-033","Complexity of anticipating all possible data states from previous versions. File I/O operations are inherently risky.",""Implement an atomic migration process: 1. Create backup of old file. 2. Attempt migration to a temporary new file. 3. If successful, replace old file with new and delete backup. 4. If failed, restore from backup and mark the file as 'incompatible'. Ensure extensive unit testing for the migration logic.""","Provide a 'recovery' tool or instructions for users to submit their old save file for manual migration. For the release, disable automatic migration and just mark old saves as incompatible, releasing the migration in a later patch.","Internal testing with legacy save file formats fails. Beta testers report losing save files after an update.","Tech Lead",2025-05-15,Open
RISK-QUALITY-001,Quality,"The game fails to meet the required performance targets of 60 FPS average / 45 FPS minimum on recommended hardware, leading to a poor user experience and negative reviews.","4","3","12","Medium","WI-038, WI-028","Unoptimized 3D assets, inefficient C# scripts (especially in `Update()` loops causing GC allocation), or heavy visual effects can degrade performance.",""Establish a performance budget early. Conduct regular profiling sessions (e.g., weekly) on a target-spec machine. Optimize assets (texture compression, LODs) and code as part of the development cycle, not as an afterthought.""","Reduce the complexity of visual effects or lower the quality settings for systems that meet minimum specs. Allocate an 'optimization sprint' before release to address bottlenecks identified by the profiler.","Profiler shows consistent frame drops below 45 FPS in key gameplay scenarios (e.g., multiple token animations, VFX-heavy events). The test build is reported as 'laggy' or 'stuttering' by QA.","QA Lead",2025-05-31,Open
RISK-TIMELINE-001,Timeline,"The high number of interdependent, high-complexity tasks in the Core Gameplay workstream (WS-004) leads to a cascade of delays, pushing back the entire project timeline.","4","3","12","Medium","WI-010, WI-012, WI-013, WI-014, WI-015, WI-016","Underestimation of the complexity and integration effort required for core game mechanics like Jail, Auctions, Building Rules, and Bankruptcy.","Prioritize implementing 'thin slices' of each feature to validate integration points early. Develop clear API contracts between services (e.g., TurnManager, AuctionManager). Use placeholder AI/UI logic to unblock core rule development.","Descale some of the more complex rules for the initial release (e.g., simplify the building shortage auction). Re-allocate developers to create a 'swat team' to focus on the blocked critical path.","A core feature work item (e.g., WI-013 Auction) is delayed by more than one sprint, impacting the start of dependent tasks like AI trading logic (WI-019).","Project Manager",2025-03-31,Open
RISK-TECH-004,Technical,"The responsive UI implementation does not gracefully handle all supported aspect ratios (16:9, 16:10, 21:9), resulting in overlapping elements, unclickable buttons, or a distorted layout for some users.","3","4","12","Medium","WI-029","UI development is complex, and manually testing all screens on all aspect ratios is time-consuming and error-prone. Anchoring and scaling logic can be complex for dynamic UIs.","Use Unity's built-in aspect ratio simulator throughout the development of every UI screen. Establish a strict prefab and anchoring strategy that all developers must follow. Add UI layout checks to the QA testing plan for every sprint.","Hard-code support for the most common ratio (16:9) and accept letterboxing/pillarboxing for others as a short-term fix. Allocate a dedicated UI developer to fix layout issues post-feature-freeze.","QA testing finds UI bugs that are specific to one aspect ratio. Key UI elements like the 'Roll Dice' button are reported as off-screen by beta testers.","UI/UX Lead",2025-04-15,Open
RISK-QUALITY-002,Quality,"The unit and integration test coverage goals (70% for core logic) are not met, leading to a higher rate of regressions and bugs in critical systems like the rule engine and economic model.","3","4","12","Medium","WI-016","Writing good tests is time-consuming. Tight deadlines may tempt developers to skip writing tests to accelerate feature delivery.","Integrate code coverage tools into the CI/CD pipeline. Make passing tests and meeting coverage a requirement for merging pull requests. Allocate specific time for writing tests within each work item's estimate.",""Implement a 'testing debt' backlog and schedule a 'hardening' sprint where the team focuses solely on increasing test coverage and fixing bugs found by new tests.""","Code coverage reports show a declining trend or consistent failure to meet the 70% target on core modules. The number of regression bugs increases sprint-over-sprint.","QA Lead",2025-05-15,Open
RISK-EXTERNAL-001,External,"The project is delayed waiting for the procurement of a valid code signing certificate, preventing the creation of a distributable, trustworthy installer.","2","4","8","Medium","WI-005","Procuring certificates involves third-party vendors and processes that can have unpredictable lead times.","Initiate the procurement process for the code signing certificate at the beginning of the project, not near the end. Assign a specific person to manage the process and follow up with the vendor.","Release initial alpha/beta builds without a signature, with a clear warning to testers about the 'Unknown Publisher' message. For a public release, this is a hard blocker and would delay the launch.","The certificate has not been received within 4 weeks of the planned release date. The vendor reports issues with the validation process.","Project Manager",2025-01-31,Open
RISK-TECH-005,Technical,"The implementation of the 'even building' and 'building shortage' rules is buggy, allowing players to bypass economic constraints and unbalance the game.","3","3","9","Medium","WI-014","The logic requires checking the state of multiple properties within a group, managing a global supply, and triggering a sub-state (auction), which creates many edge cases.",""Write extensive unit tests specifically for the `PropertyDevelopmentService`, covering all scenarios: 2- and 3-property groups, building up, selling down, and attempting to build with a mortgaged property in the set.""","If the building shortage auction (REQ-1-056) proves too complex to stabilize, replace it with a simpler rule for the first release (e.g., 'First come, first served' based on turn order) and log it as technical debt.","Playtesting reveals that players can build unevenly or build when the bank supply is empty. The bank's house/hotel count becomes negative or otherwise incorrect.","Tech Lead",2025-03-31,Open
RISK-RESOURCE-001,Resource,"The project relies on specialized skills (AI Behavior Trees, Inno Setup, Performance Profiling) that may not be evenly distributed in the team, creating bottlenecks if the key person is unavailable.","2","4","8","Medium","WI-017, WI-005, WI-038","Key person dependency on complex or niche areas of the project.","Promote knowledge sharing through pair programming and extensive documentation for specialized systems. Ensure at least two developers are familiar with the AI and build systems.","Hire a short-term contractor with the specific required skills. Accept a delay in the affected workstream until the primary developer is available again.","The primary developer for a key system (e.g., AI) is on unplanned leave, and no other team member is confident enough to continue their work, halting progress in that epic.","Project Manager",2025-02-15,Open
RISK-OPERATIONAL-001,Operational,"The uninstaller fails to perform a clean removal of all files or incorrectly deletes user data against their wishes, leading to user frustration and a poor quality perception.","2","3","6","Low","WI-005","Inno Setup scripting errors or incorrect path handling can lead to leftover files/registry keys or accidental deletion of the wrong directory.",""Conduct rigorous manual testing of the uninstallation process on clean virtual machines for all scenarios: keep data, delete data, and cancel. Use version control for the .iss script and have all changes peer-reviewed.""","Provide a support document on the game's website with manual instructions for removing any leftover files. Release a patched installer with the corrected uninstaller script.","QA testing on a clean VM finds leftover registry keys or application files after a full uninstallation. Users report that their save files were deleted even when they chose to keep them.","QA Lead",2025-05-20,Open
RISK-EXTERNAL-002,External,"A change in the official Hasbro Monopoly rules (2024 baseline) or branding guidelines requires significant rework of the core rule engine or visual assets.","1","5","5","Low","EPIC-002, EPIC-006","Dependency on an external entity's intellectual property and ruleset, which can change without notice.",""Clearly document all rules and their implementation source. Abstract the rule engine to make rule changes easier to implement. Maintain open communication channels for any updates from the licensor.""",""If a major rule change occurs mid-project, conduct a formal impact analysis. Negotiate with the licensor to either stick to the original baseline for the initial release or secure additional time/budget to implement the changes.""","Hasbro, Inc. releases a new version of the standard U.S. Monopoly rules with a change that affects core mechanics already implemented (e.g., auction process, jail rules).","Project Manager",2025-03-15,Open
RISK-TECH-006,Technical,"The save file JSON structure becomes brittle and difficult to manage as the GameState object grows, making the data migration task (WI-032) exponentially more difficult with each update.","2","3","6","Low","WI-008, WI-030, WI-032","Lack of a forward-thinking data contract design for the save file format.",""Define a clear, versioned data schema for the `GameState` JSON from the start. Avoid complex object graphs where possible. For any schema change, document the required up-versioning migration steps immediately.""","For a major, breaking change, abandon automatic migration and force users to start a new game, clearly communicating this limitation in the patch notes.","A simple change to the `PlayerState` object requires a complex, multi-step data transformation script in the `DataMigrationService`.","Tech Lead",2025-04-30,Open